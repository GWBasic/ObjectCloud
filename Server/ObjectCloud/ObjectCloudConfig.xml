<?xml version="1.0" encoding="utf-8" ?>
<ObjectCloudConfig>
<!--
Copyright 2009, 2010 Andrew Rondeau
This code is released under the Simple Public License (SimPL) 2.0.  Some additional privelages are granted.
For more information, see either DefaultFiles/Docs/license.wchtml or /Docs/license.wchtml
-->

	<FileSystem
    ConnectionString="./FileSystem"
    SyncronizeToDefaultFiles="true" />

  <!-- WARNING!!!  You REALLY need a working domain if you're using ANY OpenID-related functionality on the public internet!!!
  If you do not have a domain on the public internet, but would like to experiment, you can get a free domain at dyndns.org -->

  <!-- The CallHomeEndpoint is used so we can know how many ObjectCloud servers are currently running.  Every hour or so, the server
  POSTs its hostname to CallHomeEndpoint.  We then download /Shell/Version.json.  You can disable calling home by removing the above
  CallHomeEndpoint.  (But please don't, it's nice to be able to know how many ObjectCloud servers are running and which versions they
  use.)  -->

  <!-- <FileHandlerFactoryLocator
    Hostname="somedomain.???"
    CallHomeEndpoint="http://objectcloud.kicks-ass.net/Stats/CallHomeTracker?Method=CallHome" /> -->

  <!-- As configured, ObjectCloud will redirect incoming requests to use the server's IP as the hostname.  This can cause problems
  when trying to access ObjectCloud on the public internet if behind a firewall or NAT.  To fix this, either set the hostname (above)
  or remove the RedirectIfRequestedHostIsDifferent="true" line. -->
  <WebServer
    Port="1080"
    RedirectIfRequestedHostIsDifferent="true"
    MinimizeJavascript="true"
    CachingEnabled="true"
    CheckDeadConnectionsFrequencySeconds="15"
    MaxConnectionIdleSeconds="45"
    PreloadedObjects="/Shell,/Docs,/API,/DefaultTemplate"
    CacheSize="20000"
    />

  <!-- 
    The following additional tuning parameters are available for WebServer:
      NumConcurrentRequests:  The number of concurrent requests.  This defaults to 2 * the number of cores.  Setting this too high can lead to contention and lock timeouts
      MaxRequestsBeforeGarbageCollection:  The maximum number of requests before the server forces a full garbage collection
      MinRequestsBeforeGarbageCollection:  The minimum number of requests before the server forces a full garbage collection when it is idle
  -->

  <!-- When running a real server, this line should be deleted.  Writing to the console really kills performance -->
  <LogHandlerFactory WriteToConsole="true" />
 

</ObjectCloudConfig>