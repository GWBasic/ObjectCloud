
//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// 
//------------------------------------------------------------------------------

// Generated from: org/waveprotocol/wave/examples/fedone/rpc/rpc.proto
// Note: requires additional types generated from: google/protobuf/descriptor.proto
namespace ObjectCloud.Wave.ProtocolBuffers.Rpc
{
    [global::System.Serializable, global::ProtoBuf.ProtoContract(Name = @"CancelRpc")]
    public partial class CancelRpc : global::ProtoBuf.IExtensible
    {
        public CancelRpc() { }

        private global::ProtoBuf.IExtension extensionObject;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
        { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
    }

    [global::System.Serializable, global::ProtoBuf.ProtoContract(Name = @"RpcFinished")]
    public partial class RpcFinished : global::ProtoBuf.IExtensible
    {
        public RpcFinished() { }

        private bool _failed;
        [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name = @"failed", DataFormat = global::ProtoBuf.DataFormat.Default)]
        public bool failed
        {
            get { return _failed; }
            set { _failed = value; }
        }

        private string _error_text = "";
        [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name = @"error_text", DataFormat = global::ProtoBuf.DataFormat.Default)]
        [global::System.ComponentModel.DefaultValue("")]
        public string error_text
        {
            get { return _error_text; }
            set { _error_text = value; }
        }
        private global::ProtoBuf.IExtension extensionObject;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
        { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
    }

}