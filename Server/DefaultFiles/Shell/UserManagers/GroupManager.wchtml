<? WebComponent("/Pages/header.webcomponent?Title=Your%20Groups") ?>
<? Scripts(/API/Prototype.js, /API/Url.js, /Users/UserDB?Method=GetJSW&assignToVariable=userDB) ?>

<!-- This code is released under the LGPL, See /Docs/license.wchtml -->

   <script>

         function createGroup()
         {
            var groupType = "";
            var groupTypeInputs = $("GroupType").childElements();
            for (var i = 0; i < groupTypeInputs.length; i++)
               if (groupTypeInputs[i].checked)
                  groupType = groupTypeInputs[i].value;

            var groupName = $("CreateGroup_Name").value;
            userDB.CreateGroup(
            {
               groupname: groupName,
               grouptype: groupType
            },
            function(transport)
            {
               window.location.reload(true);
            });
         }

         function deleteGroup(groupId)
         {
            userDB.DeleteGroup(
            {
               groupId: groupId
            },
            function(transport)
            {
               window.location.reload(true);
            });
         }

         function clearGroupAlias(groupId)
         {
            $("Alias_" + groupId).value = "";
            setGroupAlias(groupId);
         }

         function setGroupAlias(groupId)
         {
            userDB.SetGroupAlias(
            {
               groupId: groupId,
               alias: $("Alias_" + groupId).value
            },
            function(transport)
            {
               window.location.reload(true);
            });
         }

      var administerableGroups = <? WebComponent("/Users/UserDB?Method=GetGroupsThatCanBeAdministered") ?>;
      var permissionsToUserDB = <? WebComponent("/Users/UserDB?Method=GetPermissionAsJSON") ?>;
   </script>

   <h1>Groups that you are a member of</h1>

   <script>
      var groupsThatIAmIn = <? WebComponent("/Users/UserDB?Method=GetGroupsThatUserIsIn") ?>;
      groupsThatIAmIn.each(function(group, i)
      {
         if (!group.Automatic)
         {
            var groupPage = "/Users/" + encodeURIComponent(group.Name) + ".group";
            var alias = null != group.Alias ? group.Alias : group.Name;

            document.write('<input type="textbox" value="' + alias + '" id="Alias_' + group.Id + '" onchange="setGroupAlias(' + "'" + group.Id + "'" + ')" > ');

            if (alias != group.Name)
               document.write('<input type="button" value="Clear" onclick="clearGroupAlias(' + "'" + group.Id + "'" + ')" > ');

            document.write('<a href="' + groupPage + '" >' + group.Name + '</a>');

            document.write('<br />');
         }
     });
   </script>

   <h1>Groups that you can administer</h1>

   <script>

      var groups = <? WebComponent("/Users/UserDB?Method=GetGroupsThatCanBeAdministered") ?>;
      groups.each(function(group, i)
      {
         if (!group.Automatic)
         {
            var groupPage;
            if ("Personal" == group.Type)
               groupPage = "/Users/" + encodeURIComponent(group.Owner) + "/" + encodeURIComponent(group.Name) + ".group";
            else
               groupPage = "/Users/" + encodeURIComponent(group.Name) + ".group";

            var membershipPage = "/Shell/UserManagers/GroupEditor.wchtml?groupname=" + group.Name;

            document.write('<a href="' + groupPage + '" >' + group.Name + '</a> <a href="' + membershipPage + '">members</a>');
         
            if (!group.BuiltIn)
               document.write('<input type="button" value="Delete" onclick="deleteGroup(' + "'" + group.Id + "'" + ')" />');

            document.write('<br />');
         }
     });

   </script>

   <h2>Create a group</h2>
   Group Name: <input type="text" name="groupname" id="CreateGroup_Name" /><br />

   <span id="GroupType">
      <input type="radio" name="GroupType" checked="true" value="Personal" /> Personal  (This group is only visible to you)<br />
      <input type="radio" name="GroupType" value="Private" /> Private  (Other people can see the group, but only you can add/remove members)<br />
      <input type="radio" name="GroupType" value="Public" /> Public  (Anyone can see and join the group)<br />
   </span>

   <input type="submit" value="Create Group" onclick="createGroup();" />

   <script>
      var permissionsToUserDB = <? WebComponent("/Users/UserDB?Method=GetPermissionAsJSON") ?>;

      if (!permissionsToUserDB.CanWrite)
         $("GroupType").hide();

      </script>

<? WebComponent("/Pages/footer.webcomponent") ?>
