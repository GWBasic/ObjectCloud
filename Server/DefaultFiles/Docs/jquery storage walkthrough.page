{"Title":"Simple Key Value Pairs from Javascript","Contents":"\u003Cp>AppFeeds provides a some simple techniques for saving and loading data from in-browser Javascript without any server-side programming, scripting, or schema creation. &nbsp;This allows for rapid prototyping of applications; or implementing simple applications that have basic security requirements.\u003Cbr>\u003C/p>\u003Cp>This page is a step-by-step walkthrough for creating a page with AppFeeds and JQuery that loads and saves data without any server-side programming or schema manipulation. &nbsp;It uses HTML5, Javascript, and jQuery to work with a name-value pairs file stored on the AppFeeds server. &nbsp;The completed page will save 4 fields within a name-value pairs file.\u003C/p>\u003Ch1>Initial Setup\u003C/h1>\u003Cp>The first things that will be done are setting up some initial folders and files. &nbsp;The application will live in the /SampleNVPs folder. &nbsp;This is created by viewing the root folder at the \u003Ca href=\"/?Action=View\" title=\"\" target=\"\">/?Action=View\u003C/a> url. &nbsp;Once viewing the root directory, scroll to \"New File,\" select \"Directory,\" type in \"SampleNVPs,\" and hit the \"Create\" button.\u003C/p>\u003Cp>\u003Cimg src=\"/Docs/jquery%20storage%20walkthrough/Creating%20folder.png\" alt=\"\" align=\"none\">\u003Cbr>\u003C/p>\u003Cp>Once in the \u003Ca href=\"/SampleNVPs\" title=\"\" target=\"\">/SampleNVPs\u003C/a> folder, two more files are needed: &nbsp;\"myapp.html\" and \"nvps\". &nbsp;\"myapp.html\" is a text file that's created by selecting \"Text File,\" and \"nvps\" is a \"Name-Value pairs\" file.\u003C/p>\u003Cp>\u003Cimg src=\"/Docs/jquery%20storage%20walkthrough/create%20myapp.png\" alt=\"\" align=\"none\">\u003Cbr>\u003C/p>\u003Cp>\u003Cimg src=\"/Docs/jquery%20storage%20walkthrough/create%20nvps.png\" alt=\"\" align=\"none\">\u003Cbr>\u003C/p>\u003Cp>Once complete,&nbsp;\u003Ca href=\"/SampleNVPs\" title=\"\" target=\"\">/SampleNVPs\u003C/a>&nbsp;should look like:\u003C/p>\u003Cp>\u003Cimg src=\"/Docs/jquery%20storage%20walkthrough/created.png\" alt=\"\" align=\"none\">\u003Cbr>\u003C/p>\u003Cmeta charset=\"utf-8\">\u003Ch1>Creating the HTML\u003C/h1>\u003Cp>Now that there is the&nbsp;\u003Ca href=\"/SampleNVPs\" title=\"\" target=\"\">/SampleNVPs\u003C/a>&nbsp;folder, \u003Ca href=\"/SampleNVPs/myapp.html\" title=\"\" target=\"\">/SampleNVPs/myapp.html\u003C/a>, and \u003Ca href=\"/SampleNVPs/nvps\" title=\"\" target=\"\">/SampleNVPs/nvps\u003C/a>, the HTML and Javascript will be created. &nbsp;Initially, simple HTML will be created. &nbsp;Click on the arrow next to myapp.html, and select \"Edit.\"\u003C/p>\u003Cp>\u003Cimg src=\"/Docs/jquery%20storage%20walkthrough/select%20edit.png\" alt=\"\" align=\"none\">\u003Cbr>\u003C/p>\u003Cp>In the editor, a simple static HTML page is created:\u003C/p>\u003Cblockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\">\u003Cpre>&lt;!DOCTYPE=\"html\"&gt;\n&lt;html&gt;\n   &lt;head&gt;\n      &lt;title&gt;Simple Demo Application&lt;/title&gt;\n   &lt;/head&gt;\n   &lt;body&gt;\n      &lt;h1&gt;Simple Demo Application&lt;/h1&gt;\n      &lt;div&gt;First: &lt;input type=\"text\" id=\"first\" /&gt;&lt;/div&gt;\n      &lt;div&gt;Middle: &lt;input type=\"text\" id=\"middle\" /&gt;&lt;/div&gt;\n      &lt;div&gt;Last: &lt;input type=\"text\" id=\"last\" /&gt;&lt;/div&gt;\n      &lt;div&gt;Age: &lt;input type=\"text\" id=\"age\" /&gt;&lt;/div&gt;\n   &lt;/body&gt;\n&lt;/html&gt;\u003Cbr>\u003C/pre>\u003C/blockquote>\u003Cp>After typing in the above HTML, and clicking save, a static HTML page is now accessible:\u003C/p>\u003Cp>\u003Cimg src=\"/Docs/jquery%20storage%20walkthrough/static%20html.png\" alt=\"\" align=\"none\">\u003Cbr>\u003C/p>\u003Ch1>Saving Data with AppFeeds and jQuery\u003C/h1>\u003Cp>Saving data uses&nbsp;\u003Ca href=\"/SampleNVPs/nvps\" title=\"\" target=\"\">/SampleNVPs/nvps\u003C/a>'s Javascript wrapper and jQuery. &nbsp;These are loaded by adding two &lt;script&gt; references in the &lt;head&gt; tag, and some boilerplate dependancies:\u003C/p>\u003Cblockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\">\u003Cpre>   &lt;head&gt;\n      &lt;title&gt;Simple Demo Application&lt;/title&gt;\n\u003Cspan class=\"Apple-style-span\" style=\"background-color: rgb(255, 255, 0);\">      &lt;script src=\"/API/AJAX.js\"&gt;&lt;/script&gt;\n      &lt;script src=\"/API/json2.js\"&gt;&lt;/script&gt;\n      &lt;script src=\"/SampleNVPs/nvps?Method=GetJSW&amp;assignToVariable=nvps\"&gt;&lt;/script&gt;\n      &lt;script src=\"/API/jquery.js\"&gt;&lt;/script&gt;\u003C/span>\n   &lt;/head&gt;\u003C/pre>\u003C/blockquote>\u003Cp>In this case, the \"nvps\" javascript object will provide access to&nbsp;\u003Ca href=\"/SampleNVPs/nvps\" title=\"\" target=\"\">/SampleNVPs/nvps\u003C/a>. &nbsp;This is accomplished by referencing&nbsp;\u003Ca href=\"/SampleNVPs/nvps\" title=\"\" target=\"\">/SampleNVPs/nvps\u003C/a>&nbsp;as a script, and appending the ?Method=GetJSW&amp;assignToVariable=nvps GET arguments. &nbsp;/API/AJAX.js and /API/json2.js are low-level drivers for AppFeeds.\u003C/p>\u003Cblockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\">\u003Cp>\u003Cb>Note\u003C/b>: &nbsp;\u003Ci>Future versions of AppFeeds will introduce a templating system that simplifies the &lt;script&gt; tag syntax when loading javascript wrapper objects, and automatically loads the low-level drivers.\u003C/i>\u003C/p>\u003C/blockquote>\u003Cp>AppFeeds includes some popular Javascript libraries, including jQuery, in the \u003Ca href=\"/API\" title=\"\" target=\"\">/API\u003C/a> folder.\u003C/p>\u003Cp>After the references to&nbsp;\u003Ca href=\"/SampleNVPs/nvps\" title=\"\" target=\"\">/SampleNVPs/nvps\u003C/a>&nbsp;and jQuery are added, the change event handlers will be written. &nbsp;These will update the&nbsp;\u003Ca href=\"/SampleNVPs/nvps\" title=\"\" target=\"\">/SampleNVPs/nvps\u003C/a>&nbsp;file whenever the value changes. &nbsp;The Javascript uses jQuery's .change event handler on the input tags, and calls the nvps object's Set function.\u003C/p>\u003Cp>\u003Cmeta charset=\"utf-8\">\u003Cpre>            $('#first').\u003Cspan class=\"Apple-style-span\" style=\"background-color: rgb(255, 255, 0);\">change\u003C/span>(function()\n            {\n               \u003Cspan class=\"Apple-style-span\" style=\"background-color: rgb(255, 255, 0);\">nvps.Set(\n               {\n                 Name: 'first',\n                 Value: this.value\n               },\n               function() {alert(\"saved\");});\u003C/span>\n            });\n\u003C/pre>\u003Cdiv>To keep things simple, the above block of code is copied for each input, although in a production environment abstracting out the element's name is&nbsp;recommended.\u003C/div>\u003C/p>\u003Cp>The complete saving code, which is placed in the &lt;head&gt; tag:\u003Cbr>\u003C/p>\u003Cblockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\">\u003Cpre>      &lt;script src=\"/API/jquery.js\"&gt;&lt;/script&gt;\n      &lt;script&gt;\n\n         $(document).ready(function() {\n\n            $('#first').change(function()\n            {\n               nvps.Set(\n               {\n                 Name: 'first',\n                 Value: this.value\n               },\n               function() {alert(\"saved\");});\n            });\n\n            $('#middle').change(function()\n            {\n               nvps.Set(\n               {\n                 Name: 'middle',\n                 Value: this.value\n               },\n               function() {alert(\"saved\");});\n            });\n\n            $('#last').change(function()\n            {\n               nvps.Set(\n               {\n                 Name: 'last',\n                 Value: this.value\n               },\n               function() {alert(\"saved\");});\n            });\n\n            $('#age').change(function()\n            {\n               nvps.Set(\n               {\n                 Name: 'age',\n                 Value: this.value\n               },\n               function() {alert(\"saved\");});\n            });\n\n         });\n\n      &lt;/script&gt;\u003C/pre>\u003C/blockquote>\u003Cp>Once the text boxes are wired to the name-value pairs file through jQuery, it's possible to test that values are saved. In&nbsp;\u003Ca href=\"/SampleNVPs/myapp.html\" title=\"\" target=\"\">/SampleNVPs/myapp.html\u003C/a>, type in some values:\u003C/p>\u003Cp>\u003Cimg src=\"/Docs/jquery%20storage%20walkthrough/working%20page%20screenshot.png\" alt=\"\" align=\"none\">\u003Cbr>\u003C/p>\u003Cp>Then, visit&nbsp;\u003Cmeta charset=\"utf-8\">\u003Ca href=\"/SampleNVPs/nvps\" title=\"\" target=\"\">/SampleNVPs/nvps\u003C/a>&nbsp;to verify that the data was saved.\u003C/p>\u003Cp>\u003Cimg src=\"/Docs/jquery%20storage%20walkthrough/saved%20data.png\" alt=\"\" align=\"none\">\u003Cbr>\u003C/p>\u003Ch1>Loading the Data\u003C/h1>\u003Cp>Saving the data from in-browser javascript is great, but when the page is refreshed, it&nbsp;disappears. &nbsp;The next step is to load the data when the page loads. &nbsp;Again, this will use jQuery and AppFeeds javascript API.\u003C/p>\u003Cblockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\">\u003Cpre>            nvps.GetAll(\n            {},\n            function(all)\n            {\n               $('#first').val(all.first);\n               $('#middle').val(all.middle);\n               $('#last').val(all.last);\n               $('#age').val(all.age);\n            });\u003C/pre>\u003C/blockquote>\u003Cp>The above code is placed after $(document).ready. &nbsp;It calls the name-value pair's GetAll function, which returns an object that has all of the values stored in the file. &nbsp;It then uses jQuery to populate the text boxes in the browser.\u003C/p>\u003Ch1>More Reading\u003C/h1>\u003Cp>The complete API for the name-value pairs object is \u003Ca href=\"/Docs/API/MethodList.wchtml?objectType=name-value\" title=\"\" target=\"\">/Docs/API/MethodList.wchtml?objectType=name-value\u003C/a>. &nbsp;In addition to name-value pairs, it's possible to create text files and directories. &nbsp;Visit \u003Ca href=\"/Docs/API.page\" title=\"\" target=\"\">/Docs/API.page\u003C/a>&nbsp;for more information about the complete API.\u003C/p>\u003Ch1>Complete myapp.html\u003C/h1>\u003Cpre>&lt;!DOCTYPE=\"html\"&gt;\n&lt;html&gt;\n   &lt;head&gt;\n      &lt;title&gt;Simple Demo Application&lt;/title&gt;\n      &lt;script src=\"/API/AJAX.js\"&gt;&lt;/script&gt;\n      &lt;script src=\"/API/json2.js\"&gt;&lt;/script&gt;\n      &lt;script src=\"/SampleNVPs/nvps?Method=GetJSW&amp;assignToVariable=nvps\"&gt;&lt;/script&gt;\n      &lt;script src=\"/API/jquery.js\"&gt;&lt;/script&gt;\n      &lt;script&gt;\n\n         $(document).ready(function() {\n\n            nvps.GetAll(\n            {},\n            function(all)\n            {\n               $('#first').val(all.first);\n               $('#middle').val(all.middle);\n               $('#last').val(all.last);\n               $('#age').val(all.age);\n            });\n\n            $('#first').change(function()\n            {\n               nvps.Set(\n               {\n                 Name: 'first',\n                 Value: this.value\n               },\n               function() {alert(\"saved\");});\n            });\n\n            $('#middle').change(function()\n            {\n               nvps.Set(\n               {\n                 Name: 'middle',\n                 Value: this.value\n               },\n               function() {alert(\"saved\");});\n            });\n\n            $('#last').change(function()\n            {\n               nvps.Set(\n               {\n                 Name: 'last',\n                 Value: this.value\n               },\n               function() {alert(\"saved\");});\n            });\n\n            $('#age').change(function()\n            {\n               nvps.Set(\n               {\n                 Name: 'age',\n                 Value: this.value\n               },\n               function() {alert(\"saved\");});\n            });\n\n         });\n\n      &lt;/script&gt;\n   &lt;/head&gt;\n   &lt;body&gt;\n      &lt;h1&gt;Simple Demo Application&lt;/h1&gt;\n      &lt;div&gt;First: &lt;input type=\"text\" id=\"first\" /&gt;&lt;/div&gt;\n      &lt;div&gt;Middle: &lt;input type=\"text\" id=\"middle\" /&gt;&lt;/div&gt;\n      &lt;div&gt;Last: &lt;input type=\"text\" id=\"last\" /&gt;&lt;/div&gt;\n      &lt;div&gt;Age: &lt;input type=\"text\" id=\"age\" /&gt;&lt;/div&gt;\n   &lt;/body&gt;\n&lt;/html&gt;\u003Cbr>\u003C/pre>"}