{"Title":"ObjectCloud and Particle Roadmap","Contents":"\n<p>This page describes the roadmap for both ObjectCloud and the Particle specification development. &#160;At this time, the timeline is unknown.</p><h1>Automatic Updates</h1><p>ObjectCloud needs to support automatic updates so that system administrators are not burdened with the tedium of manually updating each time a new feature or bugfix is implemented.</p><h1>Security through Encryption</h1><p>The current design in Particle is secure in that it's designed to prevent the spoofing problem commonly found in email. &#160;It's insecure in that the ObjectCloud reference implementation does not use any form of encryption.</p><p>This means that a user on WiFi can have his or her credentials stolen; and that a&#160;malicious&#160;ISP can impersonate an ObjectCloud user.</p><p>This most likely will be addressed by requiring SSL at all points, both for server to server communication, and client to server communication. &#160;SSL is \"easy\" to bolt on to a server by using STunnel, although it's currently not used because SSL has certain implementation difficulties and complexities.</p><p>It is possible that non-SSL Particle servers may be allowed for experimental purposes, but that SSL-protected servers won't interoperate with non-SSL servers.</p><h1>OpenID</h1><p>ObjectCloud's OpenID support is very buggy and unreliable.</p><h1>General Upload</h1><p>ObjectCloud needs an easier way to upload items like MP3s, images, and videos.</p><h1>Images</h1><p>In order for image sharing to work properly, ObjectCloud must proxy images displayed in the feed. &#160;This is to address issues that arise when a shared image isn't public, and the user viewing the feed isn't logged into the server that's hosting the image.</p><p>A potential security issue here is that image sharing in feeds essentially requires that a user's server log into the server hosting the image. &#160;A potential fix is to only show images from friends or other trusted people.</p><h1>WebFinger</h1><p>WebFinger is a system that extends OpenID so that user IDs can look like email addresses. &#160;Its implementation is critical for ObjectCloud's and Particle's success, as people generaly recognize email addresses, but will have trouble understanding OpenID's URL-based system.</p><h1>Friendship and Followers</h1><p>The protocol currently doesn't have a concept of friendship and followers. &#160;Even though the protocol eliminates the spoofing problem found in email, it still lets anyone send notifications to anyone.</p><p>Friendship in a distributed system will be more like real-life friendship. &#160;I might consider you a friend, but you might not consider me a friend. &#160;This is different from how Facebook works.</p><p>Friendship and followers will ultimately act in a manner similar to email whitelists, where the&#160;recommendation&#160;will be that UIs default to only showing objects owned by friends and/or followers.</p><h1>Groups</h1><p>TODO</p><h1>Hierarchies</h1><p>Important people designated by ObjectCloud server administers should be able to put things in all local users' feeds. &#160;This more naturally follows human leadership patterns, and is useful for when an ObjectCloud instance revolves around a civic group.</p><h1>Events and Calendars</h1><p>Events will most likely have a documentType of \"event\" or \"invitation,\" and have scheduling information in the changeData. &#160;ObjectCloud will need a concept of a user's calendar.</p><h1>Commercial Support and Scalability</h1><p>Commercial support will come from <a xmlns=\"http://www.w3.org/1999/xhtml\" href=\"http://appfeeds.com\">AppFeeds</a>. &#160;In general, ObjectCloud, as an open-source project, is intended for personal use or small communities and will not scale beyond a single server.&#160;&#160;<a xmlns=\"http://www.w3.org/1999/xhtml\" href=\"http://appfeeds.com/\">AppFeeds</a>&#160;will provide a more scalable commercial product.</p><p><br/></p><p>&#160;</p>"}