<div>Release Notes</div><h1>June 18, 2010: &nbsp;1.0 alpha:3-2&nbsp;Interlocking the cache queue for a speedy compilation of Javascript bytecode</h1><p>This release is much faster then the previous release.</p><p>Altered the Javascript sub process so that it compiles all Javascript, including eval statements, to Java bytecode. &nbsp;This bytecode is saved to disk and re-used as-needed.</p><p>Removed and replaced runtime-generated Javascript with pre-compiled Javascript and better use of Rhino's API.</p><p>Updated some underlying data structures to use lock-free queues and stacks, thus improving CPU utilization.</p><p>Updated ObjectCloud's RAM cache to use lock-free queues, thus eliminating locking. &nbsp;Also altered the cache to poll memory use and clean itself up less frequently, thus significantly improving CPU utilization.</p><h2>Known bugs:</h2><p><b>Compiled Javascript is not cleaned up</b>. &nbsp;Whenever a Javascript sub process&nbsp;encounters&nbsp;new Javascript, it compiles it to Java bytecode and saves the compiled script as a&nbsp;.compiledJS in ObjectCloud's directory. &nbsp;These are never cleaned up. &nbsp;This can be problematic when developing server-side Javascript, as each iteration of source code will result in an unused&nbsp;.compiledJS file. &nbsp;The solution is to periodically delete all&nbsp;.compiledJS files in ObjectCloud's directory, as the Javascript sub-process will re-generate these files as-needed. &nbsp;These files can be deleted while the server is running.</p><h1>May 14, 2010: &nbsp;1.0 alpha:3-1&nbsp;A high thread count is only desirable in a fancy hotel room</h1><p>Enhanced communication between the child processes that host server-side Javascript and the parent ObjectCloud process. &nbsp;This makes things a little speedier, and eliminates situations where ObjectCloud hangs in a livelock.</p><p>Fixed file uploading.</p><h1>April 30, 2010: &nbsp;1.0 alpha:3-0 Many well-defined processes lead to java-chip ice cream</h1><p>Major overhaul of the server-side Javascript engine. &nbsp;Replaced Rhino converted to a .Net dll with a multi-process system that compiles and interprets server-side Javascript in Java sub processes. &nbsp;Currently, each server-side Javascript "class" has its own isolated process. &nbsp;Rhino + Java were chosen for deployment simplicity.</p><p>Fixed an annoying bug where, after renaming a file, its Javascript wrapper still referred to the old filename.</p><p>Added some enhancements to groups' web APIs.</p><p></p><h1>March 22, 2010: &nbsp;1.0 alpha:2-2&nbsp;Keeping it simple for the lesser general public</h1><p>Switched the&nbsp;license&nbsp;to SimPL. &nbsp;See&nbsp;<a href="/Docs/license.wchtml" title="" target="">/Docs/license.wchtml</a> for more information.<br></p><p>Various bug fixes, tweaks, and other changes that make it easier to replace ObjectCloud's SQLite-based file system with a proprietary replacement. &nbsp;These primarily are concentrated around how ObjectCloud works with Spring.</p><p>Now using the latest Spring.Net and Common.Logging frameworks.</p><p>Added some lower-level support for profile pics and profile public metadata.</p><p>Updated the group functionality to be declared in C# instead of server-side Javascript. &nbsp;This is untested.</p><p>Fixed some issues with regard to relationships and permissions.</p><h1>February 4, 2010: &nbsp;1.0 alpha:2-1&nbsp;A mean end of circadia</h1><p>Revised the history page.<br></p><p>Added support for loading plugins at runtime through Spring files.</p><p>Minor API changes and unit test tweaks.</p><h1>January 20, 2010: 1.0, alpha:2-0 Camber in the cucumber</h1><p>Enhanced server-side Javascript to allow for some server-side rendering of HTML, and scripting.</p><p>Re-worked the Javascript APIs for both server-side and browser-side Javascript to pass all arguments in a single Javascript object. &nbsp;This allows the AJAX API to evolve without breaking old code.</p><p>Removed the Prototype&nbsp;dependency&nbsp;from the browser-side Javascript API. &nbsp;This allows ObjectCloud to work with frameworks that would conflict or replace Prototype.</p><p>Implemented pages for groups.</p><p>Implemented the ability to specify that a group is personal, private, or public. &nbsp;A personal group is for one's own personal use and isn't meant to be publicly visible. &nbsp;(IE, the members don't know that they're part of a group.) &nbsp;A private group is visible to all members, but only the owner can control membership. &nbsp;A public group is visible to everyone and everyone can join.</p><p>Implemented some caching of query results for certain queries that are run numerous times when hosting a static file that uses a lot of web components. &nbsp;This dramatically makes ObjectCloud faster. &nbsp;Specifically, the queries that determine what groups a user is in, and what permission a user has to a file, are now cached in RAM.</p><h1>December 8, 2009: 1.0, alpha:1-2 The glory is all gummy</h1><p>Disabled the social bar on all known mobile platforms<br></p><p>Re-wrote the cache to be less susceptible to deadlocking, and to require less worker threads to keep the caches clean.</p><p>Implemented an algorithm to keep cached objects in memory longer, and only to release unused objects as memory use increases.</p><p>Fixed indexing issues in the session manager that caused it to run slowly.&nbsp; <span style="font-style: italic;">(Note:&nbsp; The upgrade process will end all existing sessions!)</span><br></p><p>Replaced usage of the C# lock keyword with a timed lock that defaults to 10 seconds.&nbsp; This is useful in tracking down deadlocks.&nbsp; Also added a timeout for long-running database operations.<br></p><p>Added the blogum system to have a better blog / forum.</p><p>Added ability to reply to any .page file.</p><p>Updated the API to support named permissions on functions.<br></p><p>Updated the API to allow named relationships among files in a directory.<br></p><p>Added ability to expose underlying web-accessible methods when an object is wrapped with JavaScript.&nbsp; This is disabled by default for security reasons.</p><h2>Known issues</h2>
<p>Deleting files that have a SQLite database aren't being cleaned up
correctly, nor are they closing their open connections to the database.</p><h1>November 25, 2009:&nbsp;1.0, alpha:1-2 Jint' Ses Ion's in Dex with the Rhino</h1><p>Fixed some minor issues with the Social Bar that were preventing it from showing up unless someone was already present.</p><p>Fixed an issue where the database connection was closed while a long-running query ran.</p><p>Added indexes to many different object times.&nbsp; This significantly improves the logger's performance.&nbsp; This should mitigate an issue where ObjectCloud would become unresponsive while cleaning its logs.</p><p>Fixed potential null reference exception when re-using a socket in HTTP streaming mode.</p><h1>November 17, 2009: 1.0 alpha:1-1 Peas and Ketchup</h1><p>Introduced Comet features, including automatic refresh of a view of a directory if it's modified in another window, automatic refresh of a page if it's modified in another window, and the Social Bar.</p><h1>October 30, 2009:&nbsp; 1.0, alpha:1-0 Can I have a cookie from the HttpListener?</h1><p>Initial release<br></p>