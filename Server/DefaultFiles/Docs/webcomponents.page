<div>Working with WebComponents</div><p><a href="about.page">About ObjectCloud</a></p><p>ObjectCloud's WebComponent system is a powerful way to assemble pages from components on the server.&nbsp; They let a page contain be the sum of many partial pages.&nbsp; WebComponents also handle external Javascript dependancies, so the right &lt;script ...&gt; tags are automatically generated.</p><h1>Prior Knowledge<br></h1><p>WebComponents are best used by people already familiar with basic web concepts like HTML and GET forms.&nbsp; To best use WebComponents, you should be familiar with the following:</p><ul><li><span style="font-weight: bold;">HTML</span>:&nbsp; WebComponents are inserted directly into HTML.&nbsp; When working with WebComponents, you will also work with HTML.</li><li><span style="font-weight: bold;">"GET"-style Url Encoding</span>:&nbsp; WebComponents are most powerful when "GET" arguments are passed among pages.&nbsp; (This is a more advanced topic and isn't required for very simple pages.)</li></ul><h1>Overview: .wchtml and .webcomponent</h1>There are two kinds of files involved with WebComponents:<br><ul><li><span style="font-weight: bold;">.wchtml</span>:&nbsp; A complete web page that can contain web components.</li><li><span style="font-weight: bold;">.webcomponent</span>:&nbsp; A re-usable bit of HTML and Javascript that can be used in many .wchtml and .webcomponent files.</li></ul><h1>Your First WebComponents</h1><p>Create a directory, and within the folder, create three files:</p><ol><li>MyFile.wchtml&nbsp; (Make sure to select "Web Component HTML" before clicking "create")<br></li><li>MyHeader.webcomponent&nbsp; (Make sure to select "Web Component" before clicking "create")<br></li><li>MyFooter.webcomponent&nbsp; (Make sure to select "Web Component" before clicking "create")</li></ol><p>For the sake of this example, the folder /LearnOC/WebComponents/MyFirst is used.</p><p></p><p><img alt="" src="/Docs/webcomponents/simple%20files%20created.png" align="none"><br></p><p>We will now edit each file.&nbsp; (Click on the button next to the file to display the context menu, then click edit.&nbsp; In Internet Explorer, right-click on the button.)</p><h2>MyFooter.webcomponent</h2><p>Paste the following text into MyFooter.webcomponent:</p><pre style="margin-left: 40px;">&nbsp;&nbsp; &lt;/body&gt;<br>&lt;/html&gt;</pre><p>That's all that will go into the footer.</p><h2>MyHeader.webcomponent</h2><p>Paste the following text into MyHeader.webcomponent.&nbsp; Pay attention to the highlighted spot:</p><pre style="margin-left: 40px;">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"<br>"http://www.w3.org/TR/html4/strict.dtd"&gt;<br>&lt;html&gt;<br>&nbsp;&nbsp; &lt;head&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;title&gt;<span style="background-color: rgb(255, 255, 51);">&lt;? $_GET["Title"] ?&gt;</span>&lt;/title&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;link href="/Docs/objectcloud.css" type="text/css" rel="stylesheet" /&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;link href="/API/proto.menu.css" type="text/css" rel="stylesheet" /&gt;<br>&nbsp;&nbsp; &lt;/head&gt;<br>&nbsp;&nbsp; &lt;body&gt;<br></pre>The &lt;? $_GET["Title"] ?&gt; blurb inserts the GET argument named Title between the &lt;title&gt; tags.&nbsp; The Title argument's value is specified in MyFile.wchtml<br><h2>MyFile.wchtml</h2><p>Paste the following into MyFile.wchtml.&nbsp; Again, pay attention to the highlighted spots:</p><pre style="margin-left: 40px;"><span style="background-color: rgb(255, 255, 51);">&lt;? WebComponent("/LearnOC/WebComponents/MyFirst/MyHeader.webcomponent?Title=My_First_Web_Component") ?&gt;</span><br><br>This goes into the body<br><br><span style="background-color: rgb(255, 255, 51);">&lt;? WebComponent("/LearnOC/WebComponents/MyFirst/MyFooter.webcomponent") ?&gt;</span><br></pre><p>The first &lt;? WebComponent... includes the contents in MyHeader.&nbsp; Note that the full path is specified.&nbsp; (If you used a path other then /LearnOC/WebComponents/MyFirst yours will be different.)&nbsp; The ?Title=My_First_Web_Component sets the title that MyHeader.webcomponent displays.&nbsp; Arguments for WebComponents must be UrlEncoded like regular URLs; thus spaces must be replaced with %20.</p><p>The second &lt;? WebComponent... includes the foooter.&nbsp; Again, note that the full path is used.</p><h2>Displaying and Observing the Results</h2><p>Display MyFile.wchtml.&nbsp; The result should look like:</p><img src="javascript:nicImTemp();"><img alt="" src="webcomponents/MyFile%20working.png" align="none"><br><p>View the page's source.&nbsp; It should look like this:</p><pre style="margin-left: 40px;"><span class="doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"<br>"http://www.w3.org/TR/html4/strict.dtd"&gt;</span><br>&lt;<span class="start-tag">html</span>&gt;<br>   &lt;<span class="start-tag">head</span>&gt;<br>      &lt;<span class="start-tag">title</span>&gt;My_First_Web_Component&lt;/<span class="end-tag">title</span>&gt;<br>      &lt;<span class="start-tag">link</span><span class="attribute-name"> href</span><span>="</span><a href="view-source:http://10.0.1.194:1080/Docs/objectcloud.css">/Docs/objectcloud.css</a><span>" </span><span class="attribute-name">type</span>=<span class="attribute-value">"text/css" </span><span class="attribute-name">rel</span>=<span class="attribute-value">"stylesheet" </span><span class="error"><span class="attribute-name">/</span></span>&gt;<br>      &lt;<span class="start-tag">link</span><span class="attribute-name"> href</span><span>="</span><a href="view-source:http://10.0.1.194:1080/API/proto.menu.css">/API/proto.menu.css</a><span>" </span><span class="attribute-name">type</span>=<span class="attribute-value">"text/css" </span><span class="attribute-name">rel</span>=<span class="attribute-value">"stylesheet" </span><span class="error"><span class="attribute-name">/</span></span>&gt;<br>   &lt;/<span class="end-tag">head</span>&gt;<br>   &lt;<span class="start-tag">body</span>&gt;<br>This goes into the body<br><br>   &lt;/<span class="end-tag">body</span>&gt;<br>&lt;/<span class="end-tag">html</span>&gt;<br></pre><h1>Re-using some built-in WebComponents</h1><p>You can take advantage of ObjectCloud's built-in WebComponents to make your applications and pages more powerful and appealing.</p><p style="margin-left: 40px;"><span style="font-weight: bold;">Note:</span>&nbsp; <span style="font-style: italic;">As this is a very early release of ObjectCloud; the location of WebComponents could change in future releases!</span><br></p><h2>Keeping a Consistent Look and Feel with the Common Header and Footer</h2><p>The easiest way to take advantage of ObjectCloud's common look and feel in a .wchtml file is to use the common header and footer:</p><pre style="margin-left: 40px;">&lt;? WebComponent("/Docs/header.webcomponent<span style="background-color: rgb(255, 255, 51);">?Title=The%20Title</span>") ?&gt;<br>&lt;p&gt;This page has the common look at feel!&lt;/p&gt;<br>&lt;? WebComponent("/Docs/footer.webcomponent") ?&gt;<br></pre><h2>Re-Using the Navigation Bar</h2><p>You can also use the navigation bar instead of the complete headers:</p><pre style="margin-left: 40px;">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"<br>"http://www.w3.org/TR/html4/strict.dtd"&gt;<br>&lt;html&gt;<br>   &lt;head&gt;<br>      &lt;link href="/Docs/objectcloud.css" type="text/css" rel="stylesheet" /&gt;<br>      &lt;link href="/API/proto.menu.css" type="text/css" rel="stylesheet" /&gt;<br>      &lt;title&gt;Just the nav bar&lt;/title&gt;<br>   &lt;/head&gt;<br>   &lt;body&gt;<br>      &lt;? WebComponent("/Docs/navbar.webcomponent") ?&gt;<br>      &lt;p&gt;This just has the nav bar&lt;/p&gt;<br>   &lt;/body&gt;<br>&lt;/html&gt;<br></pre><h2>Display the Contents of a Directory</h2><p>Combined with some Javascript, you can display the contents of a directory:</p><pre style="margin-left: 40px;">&lt;script&gt;<br>   var files = &lt;? WebComponent($_GET["Directory"] . "?Method=ListFiles") ?&gt;;<br><br>   files.each(function(file, i)<br>   {<br>      document.write(file.Filename + '&lt;br /&gt;');<br>   });<br>...<br></pre><p>See <a target="" title="" href="/Shell/Navigation/Directory.webcomponent?Method=ReadAll">/Shell/Navigation/Directory.webcomponent?Method=ReadAll</a> for a complete example of viewing a directory's contents.<br></p><h2>Get The Current User Name</h2><p>The following WebComponent returns the current user's name or OpenID:</p><pre style="margin-left: 40px;">&lt;? WebComponent("/Users/UserDB?Method=GetUsername") ?</pre><p>See <a target="" title="" href="/Shell/UserManagers/Login.webcomponent?Method=ReadAll">/Shell/UserManagers/Login.webcomponent?Method=ReadAll</a> for a complete example of working with the user name.<br></p><h2>Get The User's Permission to a File</h2><p>The .page viewer uses the following logic based on the user's permission to a file:</p><pre style="margin-left: 40px;">var permissions = &lt;? WebComponent($_GET["FileName"] . "?Method=GetPermissionAsJSON") ?&gt;;<br><br>if (permissions.CanWrite || permissions.CanAdminister)<br>{<br>   ...<br></pre><p>In the case where someone owns the file, the permissions is resolved as the following JSON object:</p><div style="margin-left: 40px;"><pre>var permissions = {"CanRead":true,"CanWrite":true,"CanAdminister":true,"Permission":"Administer"};<br></pre></div>See <a target="" title="" href="/Shell/Viewers/PageViewer.wchtml?Method=ReadAll">/Shell/Viewers/PageViewer.wchtml?Method=ReadAll</a> for a complete example of working with a user's permission toa file.<br><h1>Introducing Javascript Dependencies</h1><p>The WebComponent system allows .webcomponent and .js files to declare the the javascript files that they depend on.&nbsp; Each script will be included only once in the file that the browser displays; a hash is placed into each scripts' URL so that the browser can cache it for a very long time; and the script is automatically minimized.&nbsp; To explain this, we will show how <a target="" title="" href="/Shell/UserManagers/Create%20Account.wchtml">/Shell/UserManagers/Create%20Account.wchtml</a> automatically includes many dependent .js files.</p><p>CreateAccout.wchtml includes the common header and some additional scripts that it uses:</p><pre style="margin-left: 40px;">&lt;? WebComponent("/Docs/header.webcomponent?Title=Create%20An%20Account") ?&gt;<br>&lt;? Scripts(/API/Prototype.js, /Users/UserDB?Method=GetJSW&amp;assignToVariable=UserDB) ?&gt;<br></pre><p>The common header includes the nav bar:</p><pre style="margin-left: 40px;">&lt;? WebComponent("/Docs/navbar.webcomponent") ?&gt;<br></pre><p>The nav bar includes the login / logout web component:</p><pre style="margin-left: 40px;">&lt;? WebComponent("/Shell/UserManagers/Login.webcomponent" ?&gt;<br></pre><p>The login web component relies on session management logic from an included .js file:</p><pre style="margin-left: 40px;">&lt;? Scripts(/API/Prototype.js, <span style="background-color: rgb(255, 255, 51);">/API/Filehandlers/SessionManager.js</span>, /Users/UserDB?Method=<span class="Apple-style-span" style="background-color: rgb(255, 255, 0);">GetJSW</span>&amp;assignToVariable=UserDB, /API/Url.js) ?&gt;<br></pre><p>SessionManager.js also relies on some additional scripts:</p><pre style="margin-left: 40px;">// Scripts: /API/Prototype.js, /API/Cookies.js, /System/SessionManager?Method=GetJSW&amp;assignToVariable=SessionManager<br></pre><p style="margin-left: 40px;"><span style="font-weight: bold;">Note</span>:&nbsp; <span style="font-style: italic;">When a .js file needs other scripts, they must all be placed on the first line with the // Scripts: prefix</span><br></p><p>When "View Source" is selected for <a target="" title="" href="../Shell/UserManagers/Create%20Account.wchtml">/Shell/UserManagers/Create%20Account.wchtml</a>, the &lt;script&gt; tags are automatically generated.&nbsp; /API/Prototypejs, which is requested multiple times, is only included once.</p><pre style="margin-left: 40px;">&lt;script src="/API/Prototype.js?BrowserCache=tWhBIOSWwxCXdxO%2BNL5IaA%3D%3D&amp;EncodeFor=JavaScript" &gt;&lt;/script&gt;<br>&lt;script src="/API/Cookies.js?BrowserCache=UmpJAn8kll%2Bje84mfxjIOQ%3D%3D&amp;EncodeFor=JavaScript" &gt;&lt;/script&gt;<br>&lt;script src="/System/SessionManager?Method=GetJSW&amp;assignToVariable=SessionManager&amp;BrowserCache=vZ11WUzP1X5y%2FhXgJQuGpQ%3D%3D&amp;EncodeFor=JavaScript" &gt;&lt;/script&gt;<br>&lt;script src="/API/Filehandlers/SessionManager.js?BrowserCache=nZQjtlsHQJq0CxD6CfZSoA%3D%3D&amp;EncodeFor=JavaScript" &gt;&lt;/script&gt;<br>&lt;script src="/Users/UserDB?Method=GetJSW&amp;assignToVariable=UserDB&amp;BrowserCache=pamMUa0%2Bh%2BeN5zyvGOPotQ%3D%3D&amp;EncodeFor=JavaScript" &gt;&lt;/script&gt;<br>&lt;script src="/API/Url.js?BrowserCache=c7C5jVfQLA2BseLTxAVxhg%3D%3D&amp;EncodeFor=JavaScript" &gt;&lt;/script&gt;<br><br></pre><p style="margin-left: 40px;"><span style="font-weight: bold;">Note</span>:&nbsp; <span style="font-style: italic;">In the event that a .js file is included by multiple .webcomponent or .js files, it will have its &lt;script&gt; tag at the point corresponding with the first &lt;? scripts... tag.</span></p><p>You might notice that ObjectCloud added two GET arguments: BrowserCache and EncodeFor. &nbsp;Whenever ObjectCloud sees the BrowserCache GET argument, it instructs the browser to cache the results for a long time. &nbsp;Therefore, when using the BrowserCache GET argument, its value must be something unique based on the requested file's contents, such as an MD5. &nbsp;The EncodeFor argument is only supported in some special cases. &nbsp;When it's supported, and its value is "JavaScript," ObjectCloud will minimize any returned JavaScript.</p><p>Thus, it's a good habit to take advantage of ObjectCloud's JavaScript tagging system because it will improve performance due to long-term caching and automatic minimization.</p><p><a href="about.page">About ObjectCloud</a></p>