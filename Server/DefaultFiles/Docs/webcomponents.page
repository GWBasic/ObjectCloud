{"Title":"Working with WebComponents","Contents":"\u003Cp>\u003Ca href=\"about.page\">About ObjectCloud\u003C/a>\u003C/p>\u003Cp>ObjectCloud's WebComponent system is a powerful way to assemble pages from components on the server.&nbsp; They let a page contain be the sum of many partial pages.&nbsp; WebComponents also handle external Javascript dependancies, so the right &lt;script ...&gt; tags are automatically generated.\u003C/p>\u003Ch1>Prior Knowledge\u003Cbr>\u003C/h1>\u003Cp>WebComponents are best used by people already familiar with basic web concepts like HTML and GET forms.&nbsp; To best use WebComponents, you should be familiar with the following:\u003C/p>\u003Cul>\u003Cli>\u003Cspan style=\"font-weight: bold;\">HTML\u003C/span>:&nbsp; WebComponents are inserted directly into HTML.&nbsp; When working with WebComponents, you will also work with HTML.\u003C/li>\u003Cli>\u003Cspan style=\"font-weight: bold;\">\"GET\"-style Url Encoding\u003C/span>:&nbsp; WebComponents are most powerful when \"GET\" arguments are passed among pages.&nbsp; (This is a more advanced topic and isn't required for very simple pages.)\u003C/li>\u003C/ul>\u003Ch1>Overview: .wchtml and .webcomponent\u003C/h1>There are two kinds of files involved with WebComponents:\u003Cbr>\u003Cul>\u003Cli>\u003Cspan style=\"font-weight: bold;\">.wchtml\u003C/span>:&nbsp; A complete web page that can contain web components.\u003C/li>\u003Cli>\u003Cspan style=\"font-weight: bold;\">.webcomponent\u003C/span>:&nbsp; A re-usable bit of HTML and Javascript that can be used in many .wchtml and .webcomponent files.\u003C/li>\u003C/ul>\u003Ch1>Your First WebComponents\u003C/h1>\u003Cp>Create a directory, and within the folder, create three files:\u003C/p>\u003Col>\u003Cli>MyFile.wchtml&nbsp; (Make sure to select \"Web Component HTML\" before clicking \"create\")\u003Cbr>\u003C/li>\u003Cli>MyHeader.webcomponent&nbsp; (Make sure to select \"Web Component\" before clicking \"create\")\u003Cbr>\u003C/li>\u003Cli>MyFooter.webcomponent&nbsp; (Make sure to select \"Web Component\" before clicking \"create\")\u003C/li>\u003C/ol>\u003Cp>For the sake of this example, the folder /LearnOC/WebComponents/MyFirst is used.\u003C/p>\u003Cp>\u003C/p>\u003Cp>\u003Cimg alt=\"\" src=\"/Docs/webcomponents/simple%20files%20created.png\" align=\"none\">\u003Cbr>\u003C/p>\u003Cp>We will now edit each file.&nbsp; (Click on the button next to the file to display the context menu, then click edit.&nbsp; In Internet Explorer, right-click on the button.)\u003C/p>\u003Ch2>MyFooter.webcomponent\u003C/h2>\u003Cp>Paste the following text into MyFooter.webcomponent:\u003C/p>\u003Cpre style=\"margin-left: 40px;\">&nbsp;&nbsp; &lt;/body&gt;\u003Cbr>&lt;/html&gt;\u003C/pre>\u003Cp>That's all that will go into the footer.\u003C/p>\u003Ch2>MyHeader.webcomponent\u003C/h2>\u003Cp>Paste the following text into MyHeader.webcomponent.&nbsp; Pay attention to the highlighted spot:\u003C/p>\u003Cpre style=\"margin-left: 40px;\">&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\u003Cbr>\"http://www.w3.org/TR/html4/strict.dtd\"&gt;\u003Cbr>&lt;html&gt;\u003Cbr>&nbsp;&nbsp; &lt;head&gt;\u003Cbr>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;title&gt;\u003Cspan style=\"background-color: rgb(255, 255, 51);\">&lt;? $_GET[\"Title\"] ?&gt;\u003C/span>&lt;/title&gt;\u003Cbr>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;link href=\"/Docs/objectcloud.css\" type=\"text/css\" rel=\"stylesheet\" /&gt;\u003Cbr>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;link href=\"/API/proto.menu.css\" type=\"text/css\" rel=\"stylesheet\" /&gt;\u003Cbr>&nbsp;&nbsp; &lt;/head&gt;\u003Cbr>&nbsp;&nbsp; &lt;body&gt;\u003Cbr>\u003C/pre>The &lt;? $_GET[\"Title\"] ?&gt; blurb inserts the GET argument named Title between the &lt;title&gt; tags.&nbsp; The Title argument's value is specified in MyFile.wchtml\u003Cbr>\u003Ch2>MyFile.wchtml\u003C/h2>\u003Cp>Paste the following into MyFile.wchtml.&nbsp; Again, pay attention to the highlighted spots:\u003C/p>\u003Cpre style=\"margin-left: 40px;\">\u003Cspan style=\"background-color: rgb(255, 255, 51);\">&lt;? WebComponent(\"/LearnOC/WebComponents/MyFirst/MyHeader.webcomponent?Title=My_First_Web_Component\") ?&gt;\u003C/span>\u003Cbr>\u003Cbr>This goes into the body\u003Cbr>\u003Cbr>\u003Cspan style=\"background-color: rgb(255, 255, 51);\">&lt;? WebComponent(\"/LearnOC/WebComponents/MyFirst/MyFooter.webcomponent\") ?&gt;\u003C/span>\u003Cbr>\u003C/pre>\u003Cp>The first &lt;? WebComponent... includes the contents in MyHeader.&nbsp; Note that the full path is specified.&nbsp; (If you used a path other then /LearnOC/WebComponents/MyFirst yours will be different.)&nbsp; The ?Title=My_First_Web_Component sets the title that MyHeader.webcomponent displays.&nbsp; Arguments for WebComponents must be UrlEncoded like regular URLs; thus spaces must be replaced with %20.\u003C/p>\u003Cp>The second &lt;? WebComponent... includes the foooter.&nbsp; Again, note that the full path is used.\u003C/p>\u003Ch2>Displaying and Observing the Results\u003C/h2>\u003Cp>Display MyFile.wchtml.&nbsp; The result should look like:\u003C/p>\u003Cimg src=\"javascript:nicImTemp();\">\u003Cimg alt=\"\" src=\"webcomponents/MyFile%20working.png\" align=\"none\">\u003Cbr>\u003Cp>View the page's source.&nbsp; It should look like this:\u003C/p>\u003Cpre style=\"margin-left: 40px;\">\u003Cspan class=\"doctype\">&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\u003Cbr>\"http://www.w3.org/TR/html4/strict.dtd\"&gt;\u003C/span>\u003Cbr>&lt;\u003Cspan class=\"start-tag\">html\u003C/span>&gt;\u003Cbr>   &lt;\u003Cspan class=\"start-tag\">head\u003C/span>&gt;\u003Cbr>      &lt;\u003Cspan class=\"start-tag\">title\u003C/span>&gt;My_First_Web_Component&lt;/\u003Cspan class=\"end-tag\">title\u003C/span>&gt;\u003Cbr>      &lt;\u003Cspan class=\"start-tag\">link\u003C/span>\u003Cspan class=\"attribute-name\"> href\u003C/span>\u003Cspan>=\"\u003C/span>\u003Ca href=\"view-source:http://10.0.1.194:1080/Docs/objectcloud.css\">/Docs/objectcloud.css\u003C/a>\u003Cspan>\" \u003C/span>\u003Cspan class=\"attribute-name\">type\u003C/span>=\u003Cspan class=\"attribute-value\">\"text/css\" \u003C/span>\u003Cspan class=\"attribute-name\">rel\u003C/span>=\u003Cspan class=\"attribute-value\">\"stylesheet\" \u003C/span>\u003Cspan class=\"error\">\u003Cspan class=\"attribute-name\">/\u003C/span>\u003C/span>&gt;\u003Cbr>      &lt;\u003Cspan class=\"start-tag\">link\u003C/span>\u003Cspan class=\"attribute-name\"> href\u003C/span>\u003Cspan>=\"\u003C/span>\u003Ca href=\"view-source:http://10.0.1.194:1080/API/proto.menu.css\">/API/proto.menu.css\u003C/a>\u003Cspan>\" \u003C/span>\u003Cspan class=\"attribute-name\">type\u003C/span>=\u003Cspan class=\"attribute-value\">\"text/css\" \u003C/span>\u003Cspan class=\"attribute-name\">rel\u003C/span>=\u003Cspan class=\"attribute-value\">\"stylesheet\" \u003C/span>\u003Cspan class=\"error\">\u003Cspan class=\"attribute-name\">/\u003C/span>\u003C/span>&gt;\u003Cbr>   &lt;/\u003Cspan class=\"end-tag\">head\u003C/span>&gt;\u003Cbr>   &lt;\u003Cspan class=\"start-tag\">body\u003C/span>&gt;\u003Cbr>This goes into the body\u003Cbr>\u003Cbr>   &lt;/\u003Cspan class=\"end-tag\">body\u003C/span>&gt;\u003Cbr>&lt;/\u003Cspan class=\"end-tag\">html\u003C/span>&gt;\u003Cbr>\u003C/pre>\u003Ch1>Re-using some built-in WebComponents\u003C/h1>\u003Cp>You can take advantage of ObjectCloud's built-in WebComponents to make your applications and pages more powerful and appealing.\u003C/p>\u003Cp style=\"margin-left: 40px;\">\u003Cspan style=\"font-weight: bold;\">Note:\u003C/span>&nbsp; \u003Cspan style=\"font-style: italic;\">As this is a very early release of ObjectCloud; the location of WebComponents could change in future releases!\u003C/span>\u003Cbr>\u003C/p>\u003Ch2>Keeping a Consistent Look and Feel with the Common Header and Footer\u003C/h2>\u003Cp>The easiest way to take advantage of ObjectCloud's common look and feel in a .wchtml file is to use the common header and footer:\u003C/p>\u003Cpre style=\"margin-left: 40px;\">&lt;? WebComponent(\"/Docs/header.webcomponent\u003Cspan style=\"background-color: rgb(255, 255, 51);\">?Title=The%20Title\u003C/span>\") ?&gt;\u003Cbr>&lt;p&gt;This page has the common look at feel!&lt;/p&gt;\u003Cbr>&lt;? WebComponent(\"/Docs/footer.webcomponent\") ?&gt;\u003Cbr>\u003C/pre>\u003Ch2>Re-Using the Navigation Bar\u003C/h2>\u003Cp>You can also use the navigation bar instead of the complete headers:\u003C/p>\u003Cpre style=\"margin-left: 40px;\">&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\u003Cbr>\"http://www.w3.org/TR/html4/strict.dtd\"&gt;\u003Cbr>&lt;html&gt;\u003Cbr>   &lt;head&gt;\u003Cbr>      &lt;link href=\"/Docs/objectcloud.css\" type=\"text/css\" rel=\"stylesheet\" /&gt;\u003Cbr>      &lt;link href=\"/API/proto.menu.css\" type=\"text/css\" rel=\"stylesheet\" /&gt;\u003Cbr>      &lt;title&gt;Just the nav bar&lt;/title&gt;\u003Cbr>   &lt;/head&gt;\u003Cbr>   &lt;body&gt;\u003Cbr>      &lt;? WebComponent(\"/Docs/navbar.webcomponent\") ?&gt;\u003Cbr>      &lt;p&gt;This just has the nav bar&lt;/p&gt;\u003Cbr>   &lt;/body&gt;\u003Cbr>&lt;/html&gt;\u003Cbr>\u003C/pre>\u003Ch2>Display the Contents of a Directory\u003C/h2>\u003Cp>Combined with some Javascript, you can display the contents of a directory:\u003C/p>\u003Cpre style=\"margin-left: 40px;\">&lt;script&gt;\u003Cbr>   var files = &lt;? WebComponent($_GET[\"Directory\"] . \"?Method=ListFiles\") ?&gt;;\u003Cbr>\u003Cbr>   files.each(function(file, i)\u003Cbr>   {\u003Cbr>      document.write(file.Filename + '&lt;br /&gt;');\u003Cbr>   });\u003Cbr>...\u003Cbr>\u003C/pre>\u003Cp>See \u003Ca target=\"\" title=\"\" href=\"/Shell/Navigation/Directory.webcomponent?Method=ReadAll\">/Shell/Navigation/Directory.webcomponent?Method=ReadAll\u003C/a> for a complete example of viewing a directory's contents.\u003Cbr>\u003C/p>\u003Ch2>Get The Current User Name\u003C/h2>\u003Cp>The following WebComponent returns the current user's name or OpenID:\u003C/p>\u003Cpre style=\"margin-left: 40px;\">&lt;? WebComponent(\"/Users/UserDB?Method=GetUsername\") ?\u003C/pre>\u003Cp>See \u003Ca target=\"\" title=\"\" href=\"/Shell/UserManagers/Login.webcomponent?Method=ReadAll\">/Shell/UserManagers/Login.webcomponent?Method=ReadAll\u003C/a> for a complete example of working with the user name.\u003Cbr>\u003C/p>\u003Ch2>Get The User's Permission to a File\u003C/h2>\u003Cp>The .page viewer uses the following logic based on the user's permission to a file:\u003C/p>\u003Cpre style=\"margin-left: 40px;\">var permissions = &lt;? WebComponent($_GET[\"FileName\"] . \"?Method=GetPermissionAsJSON\") ?&gt;;\u003Cbr>\u003Cbr>if (permissions.CanWrite || permissions.CanAdminister)\u003Cbr>{\u003Cbr>   ...\u003Cbr>\u003C/pre>\u003Cp>In the case where someone owns the file, the permissions is resolved as the following JSON object:\u003C/p>\u003Cdiv style=\"margin-left: 40px;\">\u003Cpre>var permissions = {\"CanRead\":true,\"CanWrite\":true,\"CanAdminister\":true,\"Permission\":\"Administer\"};\u003Cbr>\u003C/pre>\u003C/div>See \u003Ca target=\"\" title=\"\" href=\"/Shell/Viewers/PageViewer.wchtml?Method=ReadAll\">/Shell/Viewers/PageViewer.wchtml?Method=ReadAll\u003C/a> for a complete example of working with a user's permission toa file.\u003Cbr>\u003Ch1>Introducing Javascript Dependencies\u003C/h1>\u003Cp>The WebComponent system allows .webcomponent and .js files to declare the the javascript files that they depend on.&nbsp; Each script will be included only once in the file that the browser displays; a hash is placed into each scripts' URL so that the browser can cache it for a very long time; and the script is automatically minimized.&nbsp; To explain this, we will show how \u003Ca target=\"\" title=\"\" href=\"/Shell/UserManagers/Create%20Account.wchtml\">/Shell/UserManagers/Create%20Account.wchtml\u003C/a> automatically includes many dependent .js files.\u003C/p>\u003Cp>CreateAccout.wchtml includes the common header and some additional scripts that it uses:\u003C/p>\u003Cpre style=\"margin-left: 40px;\">&lt;? WebComponent(\"/Docs/header.webcomponent?Title=Create%20An%20Account\") ?&gt;\u003Cbr>&lt;? Scripts(/API/Prototype.js, /Users/UserDB?Method=GetJSW&amp;assignToVariable=UserDB) ?&gt;\u003Cbr>\u003C/pre>\u003Cp>The common header includes the nav bar:\u003C/p>\u003Cpre style=\"margin-left: 40px;\">&lt;? WebComponent(\"/Docs/navbar.webcomponent\") ?&gt;\u003Cbr>\u003C/pre>\u003Cp>The nav bar includes the login / logout web component:\u003C/p>\u003Cpre style=\"margin-left: 40px;\">&lt;? WebComponent(\"/Shell/UserManagers/Login.webcomponent\" ?&gt;\u003Cbr>\u003C/pre>\u003Cp>The login web component relies on session management logic from an included .js file:\u003C/p>\u003Cpre style=\"margin-left: 40px;\">&lt;? Scripts(/API/Prototype.js, \u003Cspan style=\"background-color: rgb(255, 255, 51);\">/API/Filehandlers/SessionManager.js\u003C/span>, /Users/UserDB?Method=\u003Cspan class=\"Apple-style-span\" style=\"background-color: rgb(255, 255, 0);\">GetJSW\u003C/span>&amp;assignToVariable=UserDB, /API/Url.js) ?&gt;\u003Cbr>\u003C/pre>\u003Cp>SessionManager.js also relies on some additional scripts:\u003C/p>\u003Cpre style=\"margin-left: 40px;\">// Scripts: /API/Prototype.js, /API/Cookies.js, /System/SessionManager?Method=GetJSW&amp;assignToVariable=SessionManager\u003Cbr>\u003C/pre>\u003Cp style=\"margin-left: 40px;\">\u003Cspan style=\"font-weight: bold;\">Note\u003C/span>:&nbsp; \u003Cspan style=\"font-style: italic;\">When a .js file needs other scripts, they must all be placed on the first line with the // Scripts: prefix\u003C/span>\u003Cbr>\u003C/p>\u003Cp>When \"View Source\" is selected for \u003Ca target=\"\" title=\"\" href=\"../Shell/UserManagers/Create%20Account.wchtml\">/Shell/UserManagers/Create%20Account.wchtml\u003C/a>, the &lt;script&gt; tags are automatically generated.&nbsp; /API/Prototypejs, which is requested multiple times, is only included once.\u003C/p>\u003Cpre style=\"margin-left: 40px;\">&lt;script src=\"/API/Prototype.js?BrowserCache=tWhBIOSWwxCXdxO%2BNL5IaA%3D%3D&amp;EncodeFor=JavaScript\" &gt;&lt;/script&gt;\u003Cbr>&lt;script src=\"/API/Cookies.js?BrowserCache=UmpJAn8kll%2Bje84mfxjIOQ%3D%3D&amp;EncodeFor=JavaScript\" &gt;&lt;/script&gt;\u003Cbr>&lt;script src=\"/System/SessionManager?Method=GetJSW&amp;assignToVariable=SessionManager&amp;BrowserCache=vZ11WUzP1X5y%2FhXgJQuGpQ%3D%3D&amp;EncodeFor=JavaScript\" &gt;&lt;/script&gt;\u003Cbr>&lt;script src=\"/API/Filehandlers/SessionManager.js?BrowserCache=nZQjtlsHQJq0CxD6CfZSoA%3D%3D&amp;EncodeFor=JavaScript\" &gt;&lt;/script&gt;\u003Cbr>&lt;script src=\"/Users/UserDB?Method=GetJSW&amp;assignToVariable=UserDB&amp;BrowserCache=pamMUa0%2Bh%2BeN5zyvGOPotQ%3D%3D&amp;EncodeFor=JavaScript\" &gt;&lt;/script&gt;\u003Cbr>&lt;script src=\"/API/Url.js?BrowserCache=c7C5jVfQLA2BseLTxAVxhg%3D%3D&amp;EncodeFor=JavaScript\" &gt;&lt;/script&gt;\u003Cbr>\u003Cbr>\u003C/pre>\u003Cp style=\"margin-left: 40px;\">\u003Cspan style=\"font-weight: bold;\">Note\u003C/span>:&nbsp; \u003Cspan style=\"font-style: italic;\">In the event that a .js file is included by multiple .webcomponent or .js files, it will have its &lt;script&gt; tag at the point corresponding with the first &lt;? scripts... tag.\u003C/span>\u003C/p>\u003Cp>You might notice that ObjectCloud added two GET arguments: BrowserCache and EncodeFor. &nbsp;Whenever ObjectCloud sees the BrowserCache GET argument, it instructs the browser to cache the results for a long time. &nbsp;Therefore, when using the BrowserCache GET argument, its value must be something unique based on the requested file's contents, such as an MD5. &nbsp;The EncodeFor argument is only supported in some special cases. &nbsp;When it's supported, and its value is \"JavaScript,\" ObjectCloud will minimize any returned JavaScript.\u003C/p>\u003Cp>Thus, it's a good habit to take advantage of ObjectCloud's JavaScript tagging system because it will improve performance due to long-term caching and automatic minimization.\u003C/p>\u003Cp>\u003Ca href=\"about.page\">About ObjectCloud\u003C/a>\u003C/p>"}