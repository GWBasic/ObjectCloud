<div>Mixing Server Side Javascript and HTML</div>
<blockquote class="webkit-indent-blockquote" style="margin: 0 0 0 40px; border: none; padding: 0px;"></blockquote><p><a href="about.page" style="color: rgb(68, 68, 119); ">About ObjectCloud</a><a href="about.page" style="color: rgb(68, 68, 119); "><br></a></p><blockquote class="webkit-indent-blockquote" style="margin: 0 0 0 40px; border: none; padding: 0px;"><p><b>Note</b>: &nbsp;<i>Mixing HTML with server-side Javascript is a new and experimental feature. &nbsp;This page was written quickly.</i></p></blockquote><p>Sometimes it is&nbsp;necessary&nbsp;to mix server-side Javascript and HTML. &nbsp;For example, when serving to a mobile platform, performing rendering logic in client-side Javascript could impede performance. &nbsp;Likewise, there might be some special HTML or other logic needed for legacy situations.</p><p>For more information about the built-in functions with server-side Javascript, see <a href="/Docs/server side JS.page" title="" target="">Secure Storage with Server-Side Javascript</a>.</p><p>Any text file with a .ssjs extension can contain Javascript within &lt;? and ?&gt; tags. &nbsp;The result of executing the Javascript determines how all text until the next &lt;? ?&gt; tag is rendered:</p><p></p><ul><li><b>string, number, or function</b>: &nbsp;If the Javascript results in a string, number, or function, the value is inserted into the HTML.</li><li><b>null or undefined</b>: &nbsp;If null or undefined is returned, then nothing is mixed into the HTML.</li><li><b>boolean</b>: &nbsp;If a boolean is returned, then all of the HTML until the next &lt;? ?&gt; is displayed only if true is returned. &nbsp;If false is returned, the HTML is omitted.</li><li><b>object</b>: &nbsp;If a Javascript object is returned, it allows for&nbsp;substitution&nbsp;in all of the HTML until the next &lt;? ?&gt; tag. &nbsp;For each property, values with the property name enclosed in % are replaced. &nbsp;For example, an object like { a: 'aaaa', b: 'bbb'} would replace "&lt;p&gt; %a% %b% &lt;/p&gt;" with "&lt;p&gt; aaaa bbb &lt;/p&gt;"</li><li><b>array</b>: &nbsp;If an array is returned, ObjectCloud performs the above behavior for each element. &nbsp;This allows for a single bit of HTML to be repeated if multiple objects are returned.</li></ul><p>Note: &nbsp;To return JSON, use JSON.stringify().</p>The following example creates the following HTML:<p></p><blockquote class="webkit-indent-blockquote" style="margin: 0 0 0 40px; border: none; padding: 0px;"><pre>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
"http://www.w3.org/TR/html4/strict.dtd"&gt;
&lt;html&gt;
   &lt;head&gt;
      &lt;? Scripts(/API/Prototype.js) ?&gt;
      &lt;title&gt;Test of SSJS system&lt;/title&gt;
      &lt;link href="/Pages/objectcloud.css" type="text/css" rel="stylesheet" /&gt;
      &lt;link href="/API/proto.menu.css" type="text/css" rel="stylesheet" /&gt;
   &lt;/head&gt;
   &lt;body&gt;

   &lt;p&gt;Loading server-side JS:
      &lt;?
         try
         {
            var result = use('/API/AJAX_serverside.js');
            "loaded " + result;
         }
         catch (exception)
         {
           exception;
         }
      ?&gt;
   &lt;/p&gt;

   &lt;p&gt;Loading another object:
      &lt;?
         try
         {
            var result = open('/API');
            "loaded " + result;
         }
         catch (exception)
         {
           exception;
         }
      ?&gt;
   &lt;/p&gt;

   &lt;p&gt;Number: &lt;? var e = 1+1; e; ?&gt;&lt;/p&gt;
   &lt;p&gt;String: &lt;? "foo"; ?&gt;&lt;/p&gt;
   &lt;p&gt;Function: &lt;? function(){}; ?&gt;&lt;/p&gt;
   &lt;p&gt;Exception: &lt;? throw "exp"; ?&gt;&lt;/p&gt;
   &lt;p&gt;Syntax error: &lt;? retur ?&gt;&lt;/p&gt;
   &lt;p&gt;Null: &lt;? null; ?&gt;&lt;/p&gt;
   &lt;p&gt;Array (note the no-op): &lt;? [1, 'aaa', 86]; ?&gt;&lt;/br&gt; &lt;? ?&gt;&lt;/p&gt;
   &lt;p&gt;True (note the no-op): &lt;? true; ?&gt;true&lt;? ?&gt;&lt;/p&gt;
   &lt;p&gt;False (note the no-op): &lt;? false; ?&gt;false&lt;? ?&gt;&lt;/p&gt;

   &lt;p&gt;Replacements: &lt;? var toReturn = {a: 'aaaaaa', b: 'bbbbbbb'}; toReturn; ?&gt;
      &lt;ul&gt;&lt;li&gt;a: %a% &lt;li&gt;b: %b%&lt;/ul&gt;&lt;? ?&gt;&lt;/p&gt;

   &lt;p&gt;Multiple Replacements: 
      &lt;?
         [{a: 'aaaaaa', b: 'bbbbbbb'},{a: 'aaa', b: 'bbb'},{a: 1, b: 2}];
      ?&gt;

      &lt;ul&gt;&lt;li&gt;a: %a% &lt;li&gt;b: %b%&lt;/ul&gt;&lt;? ?&gt;&lt;/p&gt;

   &lt;p&gt;JSON: &lt;? JSON.stringify({a: 'a', b: 'b'}); ?&gt;&lt;/p&gt;
   &lt;/body&gt;
&lt;/html&gt;<br></pre></blockquote><p>Resulting HTML:</p><blockquote class="webkit-indent-blockquote" style="margin: 0 0 0 40px; border: none; padding: 0px;"><pre>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
"http://www.w3.org/TR/html4/strict.dtd"&gt; 
&lt;html&gt; 
   &lt;head&gt; 
      &lt;script src="/API/Prototype.js?BrowserCache=LyY9krEuP0mduQEXeXq9FA%3D%3D&amp;EncodeFor=JavaScript" &gt;&lt;/script&gt; 
      &lt;title&gt;Test of SSJS system&lt;/title&gt; 
      &lt;link href="/Pages/objectcloud.css" type="text/css" rel="stylesheet" /&gt; 
      &lt;link href="/API/proto.menu.css" type="text/css" rel="stylesheet" /&gt; 
   &lt;/head&gt; 
   &lt;body&gt; 
 
   &lt;p&gt;Loading server-side JS:
      loaded undefined
   &lt;/p&gt; 
 
   &lt;p&gt;Loading another object:
      loaded [object Object]
   &lt;/p&gt; 
 
   &lt;p&gt;Number: 2&lt;/p&gt; 
   &lt;p&gt;String: foo&lt;/p&gt; 
   &lt;p&gt;Function: 
function () {
}
&lt;/p&gt; 
   &lt;p&gt;Exception: exp &lt;/p&gt; 
   &lt;p&gt;Syntax error: ReferenceError: "retur" is not defined. &lt;/p&gt; 
   &lt;p&gt;Null: &lt;/p&gt; 
   &lt;p&gt;Array (note the no-op): 1&lt;/br&gt; aaa&lt;/br&gt; 86&lt;/br&gt; &lt;/p&gt; 
   &lt;p&gt;True (note the no-op): true&lt;/p&gt; 
   &lt;p&gt;False (note the no-op): &lt;/p&gt; 
 
   &lt;p&gt;Replacements: 
      &lt;ul&gt;&lt;li&gt;a: aaaaaa &lt;li&gt;b: bbbbbbb&lt;/ul&gt;&lt;/p&gt; 
 
   &lt;p&gt;Multiple Replacements: 
      
 
      &lt;ul&gt;&lt;li&gt;a: aaaaaa &lt;li&gt;b: bbbbbbb&lt;/ul&gt; 
 
      &lt;ul&gt;&lt;li&gt;a: aaa &lt;li&gt;b: bbb&lt;/ul&gt; 
 
      &lt;ul&gt;&lt;li&gt;a: 1 &lt;li&gt;b: 2&lt;/ul&gt;&lt;/p&gt; 
 
   &lt;p&gt;JSON: {"a":"a","b":"b"}&lt;/p&gt; 
   &lt;/body&gt; 
&lt;/html&gt;<br></pre></blockquote><h1>Scope</h1><p>Each &lt;? ?&gt; is its own scope. &nbsp;Unlike in-browser Javascript, variables declared in one &lt;? ?&gt; bracket are not available in later brackets. &nbsp;To make data available, an object called "scope" is shared among all brackets.</p><p>Example:</p><blockquote class="webkit-indent-blockquote" style="margin: 0 0 0 40px; border: none; padding: 0px;"><pre>&lt;? scope.a = 'fsfds' ?&gt;</pre><pre>&lt;? scope.a += 'append' ?&gt;</pre></blockquote>