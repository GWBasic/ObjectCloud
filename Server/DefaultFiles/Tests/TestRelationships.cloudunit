// Scripts: /API/File.js, /API/json2.js

var unitTests =
{
   TestDirectory : null,

   setUp : function(runTests)
   {
      var me = this;

      File.GetWrapper(
         "/Users/[name]",
         function(myDirectory)
         {
            myDirectory.CreateFile(
               {
                  FileName: "TestRelationships" + Math.floor(Math.random() * 10000),
                  FileType: "directory",
                  ErrorIfExists: false
               },
               function(testDirectoryWrapper) 
               {
                  me.TestDirectory = testDirectoryWrapper;
                  runTests();
               });
         });
   },

   testAddRelationship : function(testToken)
   {
      var me = this;

      me.TestDirectory.CreateFile(
         {
            FileName: "parentFile.txt",
            FileType: "text",
            ErrorIfExists: false
         },
         function(parentFile)
         {
            me.TestDirectory.CreateFile(
               {
                  FileName: "relatedFile.txt",
                  FileType: "text",
                  ErrorIfExists: false
               },
               function(relatedFile)
               {
                  parentFile.AddRelatedFile(
                     {
                        filename: "relatedFile.txt",
                        relationship: "test"
                     },
                     function()
                     {
                        parentFile.GetRelatedFiles(
                           {},
                           function(relationships)
                           {
                              try
                              {
                                 if (1 == relationships.length)
                                    if ("relatedFile.txt" == relationships[0].Filename)
                                    {
                                       testToken.Pass();
                                       return;
                                    }

                                 testToken.Fail(JSON.stringify(relationships));
                              }
                              catch (exception)
                              {
                                 testToken.fail(exception);
                              }
                           },
                           testToken.FailAJAX);
                     },
                     testToken.FailAJAX);
               },
               testToken.FailAJAX);
         },
         testToken.FailAJAX);
   }
};