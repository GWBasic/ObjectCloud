<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ObjectCloud.Disk.WebHandlers</name>
    </assembly>
    <members>
        <member name="T:ObjectCloud.Disk.WebHandlers.LogWebHandler">
            <summary>
            Reads ObjectCloud's system log
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.DatabaseWebHandler`2">
            <summary>
            Base class for web handlers that exposes an underlying database to the web if the file supports a database
            </summary>
            <typeparam name="TFileHandler"></typeparam>
            <typeparam name="TWebHandler"></typeparam>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.WebHandler`1">
            <summary>
            Generic web handler.  Other web handlers can inherit from this web handler, or the Non-Generic WebHandler can be used
            if the file doesn't support web access
            </summary>
            <typeparam name="TFileHandler">The type of file handler</typeparam>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetMethod(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns a delegate to handle the incoming request
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.WebHandler`1.AllowedBaseMethods">
            <summary>
            These methods are allowed even if the object is wrapped by a server-side javascript class
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.WebHandler`1.CachedInBrowserJSWrapper">
            <summary>
            The cached in-browser JavaScript wrapper
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetJSW(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String,System.Boolean)">
            <summary>
            Returns a Javascript object that can perform all calls to all methods marked as WebCallable through AJAX.
            </summary>
            <param name="webConnection"></param>
            <param name="assignToVariable">The variable to assign the wrapper object to</param>
            <param name="EncodeFor">If set to "JavaScript", the generated JavaScript will be minimized</param>
            <param name="bypassJavascript">true to bypass server-side Javascript</param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetServersideJavascriptErrors(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns any syntax errors that occur as a result of trying to load server-side javascript
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.SetPermission(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String[])">
            <summary>
            Sets the user's permission for the given file.  Either the user or group ID or name are set
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
            <param name="FilePermission">The permission, set to null to disable permissions to the file</param>
            <param name="Inherit">Set to true to allow permission inheritance.  For example, if this permission applies to a directory, it will be the default for files in the directory</param>
            <param name="UserOrGroup"></param>
            <param name="UserOrGroupId"></param>
            <param name="SendNotifications"></param>
            <param name="namedPermissions"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetPermission(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns the currently logged un user's permission for this file.  If the user doesn't have an assigned permission, a 0-length string is returned.
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetPermissionAsJSON(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns the currently logged in user's permission for this file as a Javascript object that can be queried.
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetInfoAndPermission(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns the currently logged in user's permission for this file as a Javascript object that can be queried, the file name, extension, full path, create date, and modification date.
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetPermissions(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns all assigned permissions to the object
            </summary>
            <param name="webConnection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.SetNamedPermission(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Nullable{System.Guid},System.String,System.String,System.Boolean)">
            <summary>
            Sets a named permission
            </summary>
            <param name="webConnection"></param>
            <param name="UserOrGroupId"></param>
            <param name="usernameOrGroup"></param>
            <param name="namedPermission"></param>
            <param name="inherit"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.RemoveNamedPermission(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Nullable{System.Guid},System.String,System.String)">
            <summary>
            Removes the named permission
            </summary>
            <param name="webConnection"></param>
            <param name="UserOrGroupId"></param>
            <param name="usernameOrGroup"></param>
            <param name="namedPermission"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetNamedPermissions(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Returns all of the users and groups that have the named permission
            </summary>
            <param name="webConnection"></param>
            <param name="namedPermission"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.HasNamedPermission(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Returns true if the user has the named permission, false otherwise
            </summary>
            <param name="webConnection"></param>
            <param name="namedPermission"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.Vacuum(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Performs any needed cleanup and optimization operations needed on the file 
            </summary>
            <param name="webConnection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.CreateUserObjectForJSON(ObjectCloud.Interfaces.Security.IUser)">
            <summary>
            Helper to create a JSON object for a user
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.PostBusAsRead(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Posts a message to the bus as coming from someone with read permission
            </summary>
            <param name="webConnection"></param>
            <param name="incoming">The message to post to the bus</param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.PostBusAsWrite(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Posts a message to the bus as coming from someone with write permission
            </summary>
            <param name="webConnection"></param>
            <param name="incoming">The message to post to the bus</param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.PostBusAsAdminister(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Posts a message to the bus as coming from someone with administer permission
            </summary>
            <param name="webConnection"></param>
            <param name="incoming"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.PostBus(ObjectCloud.Interfaces.Security.IUser,System.Object,System.String)">
            <summary>
            Posts some data to the bus
            </summary>
            <param name="data"></param>
            <param name="source"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetConnectedUsers(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns all of the users connected to the object
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.PostComet(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Called as part of the loop of a transport (level 1) comet session
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.WebHandler`1.PendingCometListeners">
            <summary>
            Pending comet listeners
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.WebHandler`1.ActiveCometTransports">
            <summary>
            All of the comet transports that are currently active
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.CreateNewCometTransport(ObjectCloud.Interfaces.Security.ISession,System.Collections.Generic.IDictionary{System.String,System.String},System.Int64)">
            <summary>
            Creates a new comet transport as part of a transport (level 1) or multiplexed (level 2) comet session
            </summary>
            <param name="session"></param>
            <param name="transportId"></param>
            <param name="getArguments"></param>
            <returns></returns>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.WebHandler`1.ChannelEndpointPropertiesAndPermissionsByType">
            <summary>
            Holds all properties and permissions by Type for channel endpoints
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.ConstructCometTransport(ObjectCloud.Interfaces.Security.ISession,System.Collections.Generic.IDictionary{System.String,System.String},System.Int64)">
            <summary>
            Constructs a comet transport for transport (level 1) or multiplexed (level 2) comet
            </summary>
            <param name="session"></param>
            <param name="transportId"></param>
            <param name="getArguments"></param>
            <returns></returns>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.WebHandler`1.PurgeOldCometSessionsKey">
            <summary>
            Syncronizes access to PurgeOldCometSessionsTimer
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.WebHandler`1.PurgeOldCometSessionsTimer">
            <summary>
            Purges dead comet sessions
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetCometTransport(ObjectCloud.Interfaces.Security.ISession,System.Int64)">
            <summary>
            Retrieves a pre-exising comet transport as part of a transport (level 1) or multiplexed (level 2) comet session
            </summary>
            <param name="session"></param>
            <param name="transportId"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.CleanOldTransports(System.Object)">
            <summary>
            Cleans up old and dead transports
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.AddRelatedFile(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Adds a file as being related to this file
            </summary>
            <param name="webConnection"></param>
            <param name="filename"></param>
            <param name="relationship"></param>
            <param name="inheritPermission">Set to true if the related file should inherit READ permissions from the parent file.  That is, anyone who has at least READ permission to the parent file will be able to read the related file.  In order for this to work, the user must have administer permissions to the related file or an error will occur</param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.DeleteRelatedFile(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Removes a file from being related to this file
            </summary>
            <param name="webConnection"></param>
            <param name="filename"></param>
            <param name="relationship"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetRelatedFiles(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.UInt32})">
            <summary>
            Returns information about each file that is related to this file
            </summary>
            <param name="webConnection"></param>
            <param name="relationships">A JSON array of potential relationships, or null to match all relationships</param>
            <param name="extensions">A JSON array of potential extentions, or null to match all extensions</param>
            <param name="newest"></param>
            <param name="oldest"></param>
            <param name="maxToReturn"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetFilesForJSON(ObjectCloud.Interfaces.Security.ISession,System.Collections.Generic.IEnumerable{ObjectCloud.Interfaces.Disk.IFileContainer})">
            <summary>
            Returns all files as JSON-able dictionaries
            </summary>
            <param name="session"></param>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetFileForJSON(ObjectCloud.Interfaces.Security.ISession,ObjectCloud.Interfaces.Disk.IFileContainer)">
            <summary>
            Returns the file as JSON
            </summary>
            <param name="session"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.Chown(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Nullable{System.Guid})">
            <summary>
            Changes this file's owner
            </summary>
            <param name="webConnection"></param>
            <param name="newOwnerId">The new owner's user ID</param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.SendRelationship(ObjectCloud.Interfaces.WebServer.IQueuingReliableCometTransport,ObjectCloud.Interfaces.Disk.RelationshipEventArgs)">
            <summary>
            Helper to update the files on a connection
            </summary>
            <param name="channel"></param>
            <param name="args"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.ResetExecutionEnvironment">
            <summary>
            Rebuilds the Javascript execution environment
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.WebHandler`1.CreatingExecutionEnvironment">
            <summary>
            Prevents recurion when calling GetOrCreateExecutionEnvironment(), as this will almost always result in a stack overflow exception
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetOrCreateExecutionEnvironment">
            <summary>
            Where Javascript is executed
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.CreateExecutionEnvironmentIfNoOtherThreadCreating">
            <summary>
            Creates an execution environment if no other thread is creating one
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.FindJavascriptContainer(System.String,ObjectCloud.Interfaces.Disk.IDirectoryHandler)">
            <summary>
            Finds the Javascript containing file for the given extension and its parent directory handler
            </summary>
            <param name="extension"></param>
            <param name="parentDirectoryHandler"></param>
            <returns></returns>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.WebHandler`1._ExecutionEnvironment">
            <summary>
            The cached ExecutionEnvironment.  Call GetOrCreateExecutionEnvironment to ensure that the value is fresh
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.WebHandler`1.ExecutionEnvironmentLock">
            <summary>
            Lock for when determining if the ExecutionEnvironment should be updated
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.WebHandler`1.GetAssignableNamedPermissions(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns the named permissions that apply to this file 
            </summary>
            <param name="webConnection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.WebHandler`1.FileHandler">
            <value>
            The FileHandler, pre-casted
            </value>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.WebHandler`1.FileContainer">
            <value>
            The FileContainer 
            </value>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.WebHandler`1.FileHandlerFactoryLocator">
            <summary>
            The FileHandlerFactoryLocator
            </summary>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.WebHandler`1.ImplicitAction">
            <summary>
            The default action to run if no action or method is specified in the URL
            </summary>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.WebHandler`1.WebHandlerTypes">
            <summary>
            The web handler types
            </summary>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.WebHandler`1.Bus">
            <summary>
            The object's bus.  Messages can be written to the bus without having to open a Comet session; any user with read permission to the object can open a comet session and see all messages on the bus
            </summary>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.WebHandler`1.RelationshipEvent">
            <summary>
            Sends a packet whenever a relationship is added
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.WebHandler`1.CometSessionId">
            <summary>
            Used to uniquely identify a comet session
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.WebHandler`1.CometSessionTracker">
            <summary>
            Used to track if a comet session is going idle
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.WebHandler`1.PropertyAndPermission">
            <summary>
            Holds property and permission
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DatabaseWebHandler`2.PostQuery(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Returns the results of the query.  Results are committed to the database.  Inteded for writes.
            </summary>
            <param name="webConnection"></param>
            <param name="query">The query to run.</param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DatabaseWebHandler`2.PostToStoredProc(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Runs the stored procedure and returns the results.  Intended for queries that write.  Changes are committed.
            </summary>
            <param name="webConnection"></param>
            <param name="procFile">This file contains the stored procedure to run</param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DatabaseWebHandler`2.RunStoredProc(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Returns the results of the stored procedure.  TODO:  Allow stored procs to declare their prefered HTTP verb (GET, POST...), and allow queries to declare if they need to be committed.  (GETs might still want to log.)
            </summary>
            <param name="webConnection"></param>
            <param name="procFile"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DatabaseWebHandler`2.RunQuery(System.String,ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Helper method for running a query.  TODO:  An error should occur if an attempt is made to write when commit is set to false
            </summary>
            <param name="query">
            A <see cref="T:System.String"/>
            </param>
            <param name="webConnection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DatabaseWebHandler`2.GetVersion(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Gets the version
            </summary>
            <param name="connection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DatabaseWebHandler`2.SetVersion(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Nullable{System.Double})">
            <summary>
            Sets the version
            </summary>
            <param name="connection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <param name="version">
            A <see cref="T:System.Nullable"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.DatabaseWebHandler`2.DatabaseHandler">
            <summary>
            The database web handler, or an exception if this object doesn't support database-style access
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.LogWebHandler.GetClassnames(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns all of the class names that are present in the log
            </summary>
            <param name="webConnection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.LogWebHandler.ReadLog(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String[],System.Nullable{System.DateTime},System.Nullable{System.DateTime},ObjectCloud.Interfaces.Disk.LoggingLevel[],System.Int32[],System.Guid[],System.String[],System.String[],System.String,System.String[],System.String)">
            <summary>
            Reads the log
            </summary>
            <param name="classnames">
            A <see cref="T:System.String"/>
            </param>
            <param name="minTimeStamp">
            A <see cref="T:System.Nullable"/>
            </param>
            <param name="maxTimeStamp">
            A <see cref="T:System.Nullable"/>
            </param>
            <param name="loggingLevels">
            A <see cref="T:ObjectCloud.Interfaces.Disk.LoggingLevel"/>
            </param>
            <param name="threadIds">
            A <see cref="T:System.Int32"/>
            </param>
            <param name="sessionIds">
            A <see cref="T:System.Guid"/>
            </param>
            <param name="users">
            A <see cref="T:System.String"/>
            </param>
            <param name="exceptionClassnames">
            A <see cref="T:System.String"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
            <param name="remoteEndpoints"></param>
            <param name="webConnection"></param>
            <param name="exceptionMessageLike"></param>
            <param name="messageLike"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.LogWebHandler.ReadMyLog(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String[],System.Nullable{System.DateTime},System.Nullable{System.DateTime},ObjectCloud.Interfaces.Disk.LoggingLevel[],System.Int32[],System.Guid[],System.String[],System.String,System.String[],System.String)">
            <summary>
            Lets a user read the log entries that he or she created
            </summary>
            <param name="remoteEndpoints"></param>
            <param name="webConnection"></param>
            <param name="classnames">
            A <see cref="T:System.String"/>
            </param>
            <param name="minTimeStamp">
            A <see cref="T:System.Nullable"/>
            </param>
            <param name="maxTimeStamp">
            A <see cref="T:System.Nullable"/>
            </param>
            <param name="loggingLevels">
            A <see cref="T:ObjectCloud.Interfaces.Disk.LoggingLevel"/>
            </param>
            <param name="threadIds">
            A <see cref="T:System.Int32"/>
            </param>
            <param name="sessionIds">
            A <see cref="T:System.Guid"/>
            </param>
            <param name="exceptionClassnames">
            A <see cref="T:System.String"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
            <param name="exceptionMessageLike"></param>
            <param name="messageLike"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.LogWebHandler.GetDeleteTimespans(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Updates when specific kinds of logging information can be deleted
            </summary>
            <param name="webConnection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.LogWebHandler.SetDeleteTimespans(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Collections.Generic.Dictionary{System.String,System.Double})">
            <summary>
            Updates when specific kinds of logging information can be deleted
            </summary>
            <param name="webConnection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <param name="deleteTimespans"></param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.Can">
            <summary>
            
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.NamedPermissionBase">
            <summary>
            
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.CanBase">
            <summary>
            Assists in processing permissions on a file
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.CanBase.GetFileContainer(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.NamedPermissionBase.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.NamedPermissionBase.DetermineCondition(ObjectCloud.Interfaces.Templating.ITemplateParsingState,ObjectCloud.Interfaces.Disk.IFileContainer,System.String)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="fileContainer"></param>
            <param name="namedPermission"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.Can.DetermineCondition(ObjectCloud.Interfaces.Templating.ITemplateParsingState,ObjectCloud.Interfaces.Disk.IFileContainer,System.String)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="fileContainer"></param>
            <param name="namedPermission"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Comet.LoopbackQueuingReliableWebHandler">
            <summary>
            Simple test of the Quality and Reliable (layer 3) Comet Protocol
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.LoopbackQueuingReliableWebHandler.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.LoopbackQueuingReliableWebHandler.ConstructCometTransport(ObjectCloud.Interfaces.Security.ISession,System.Collections.Generic.IDictionary{System.String,System.String},System.Int64)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="getArguments"></param>
            <param name="transportId"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler">
            <summary>
            Web wrapper for the user database
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.PendingSenderTokens">
            <summary>
            In-memory sender tokens that are awaiting storage in the database because of a pending respondTrust call
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.EstablishTrust(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Establishes trust between a sender and this server
            </summary>
            <param name="webConnection"></param>
            <param name="senderIdentity"></param>
            <param name="avatar"></param>
            <param name="token"></param>
            <param name="loginURL"></param>
            <param name="loginURLOpenID"></param>
            <param name="loginURLWebFinger"></param>
            <param name="loginURLRedirect"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.RespondTrust(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Handles a server's response to EstablishTrust
            </summary>
            <param name="webConnection"></param>
            <param name="token"></param>
            <param name="senderToken"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.ReceiveNotification(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String[],System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="webConnection"></param>
            <param name="senderToken"></param>
            <param name="recipients"></param>
            <param name="objectUrl"></param>
            <param name="summaryView"></param>
            <param name="documentType"></param>
            <param name="verb"></param>
            <param name="changeData"></param>
            <returns></returns>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.ValidSummaryViewClasses">
            <summary>
            The valid summary view classes
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.ValidateSummaryView(System.String@,System.String@)">
            <summary>
            Validates a summary view, removing invalid tags, attributes, and css classes
            </summary>
            <param name="summaryView"></param>
            <param name="summaryViewError"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.ValidateChangeData(System.String,System.String@,System.String@,System.String@)">
            <summary>
            Validates change data
            </summary>
            <param name="verb"></param>
            <param name="changeData"></param>
            <param name="changeDataError"></param>
            <param name="linkedSenderIdentity"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.ReceiveNotificationDelegate">
            <summary>
            Delegate for RecieveNotification
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.Login(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Logs in
            </summary>
            <param name="webConnection"></param>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.Logout(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Logs out
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.CreateUser(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Creates the user
            </summary>
            <param name="webConnection"></param>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.CreateGroup(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String,System.String)">
            <summary>
            Creates the group
            </summary>
            <param name="webConnection"></param>
            <param name="groupname"></param>
            <param name="username">The group's owner, or null if the current user is the owner</param>
            <param name="grouptype"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.DeleteGroup(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.Nullable{System.Guid})">
            <summary>
            Deletes the group
            </summary>
            <param name="webConnection"></param>
            <param name="groupname"></param>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.GetGroup(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Returns the group. Either groupname OR groupid must be specified
            </summary>
            <param name="webConnection"></param>
            <param name="groupname"></param>
            <param name="groupid"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.GetGroupAndAlias(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Guid)">
            <summary>
            Returns the user's alias for the group
            </summary>
            <param name="webConnection"></param>
            <param name="groupid"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.GetGroupInt(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Gets the group specified in the web connection 
            </summary>
            <param name="webConnection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.Security.IGroup"/>
            </returns>
            <param name="groupid"></param>
            <param name="groupname"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.GetUser(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Gets the user specified in the web connection 
            </summary>
            <param name="webConnection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.Security.IUser"/>
            </returns>
            <param name="userid"></param>
            <param name="username"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.GetUsername(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns the user name of the currently-logged in user.  This is preferable to querying the user's object due
            to OpenID issues
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.GetCurrentUser(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns a JSON object with information about the current user
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.GetIdentity(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns the user open id of the currently-logged in user.
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.AddUserToGroup(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String,System.String,System.String)">
            <summary>
            Adds the user to the group.  Either groupname or groupid must be specified, AND, username or userid must be specified
            </summary>
            <param name="webConnection"></param>
            <param name="groupname"></param>
            <param name="groupid"></param>
            <param name="username"></param>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.RemoveUserFromGroup(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String,System.String,System.String)">
            <summary>
            Removes the user from the group.  Either groupname or groupid must be specified, OR, username or userid must be specified
            </summary>
            <param name="webConnection"></param>
            <param name="groupname"></param>
            <param name="groupid"></param>
            <param name="username"></param>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.GetUsersGroups(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Returns all of the groups that the user is in.  The caller must either be the user queried, be an administrator, or have administrative permission for the user
            </summary>
            <param name="webConnection"></param>
            <param name="username"></param>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.SetGroupAlias(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Guid,System.String)">
            <summary>
            Sets the user's alias for the group
            </summary>
            <param name="webConnection"></param>
            <param name="groupId"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.GetUsersInGroup(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Returns all of the users in the group.  Either groupname or groupid must be specified
            </summary>
            <param name="webConnection"></param>
            <param name="groupname"></param>
            <param name="groupid"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.GetGroupsThatCanBeAdministered(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Gets all of the groups that the current user can administer
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.SearchUsersAndGroups(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.Nullable{System.UInt32})">
            <summary>
            Returns all public groups.  On systems with large amounts of groups; this should be somehow disabled, or 
            </summary>
            <param name="webConnection"></param>
            <param name="max"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.GetGroupsThatUserIsIn(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Gets all of the groups that the current user is in
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.IsUserInGroup(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Returns true if the user is in the specified group, false otherwise
            </summary>
            <param name="webConnection"></param>
            <param name="groupname">The group name to match.</param>
            <param name="groupid">The group ID.  Either this or groupname must be set</param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.IsUserInGroupsOrMatch(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String[])">
            <summary>
            Returns true if the user is in the specified groups or the username is specified
            </summary>
            <param name="webConnection"></param>
            <param name="groupAndUserNames">The group and user names.  Returns true if the user is a member of any of these groups, or if the user name is specified</param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.OpenIDLogin(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Starts the process of logging into this server using an OpenId.  The result is that the user will be rediected to a new page
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.CompleteOpenIdLogin(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Completes the process of a user logging into this web server with openId
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.ProvideOpenID(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Accepts the user's password when logging into another site with OpenID
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.ParticleAvatarsDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.UserManagerWebHandler.ValidSummaryViewTagsAndAttributes">
            <summary>
            The valid summary view tags and attributes.  Each tag is a key, and then there is a set of valid attributes
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.NameValuePairsWebHandler">
            <summary>
            Wrapper for web methods that handle name-value pairs
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.NameValuePairsWebHandler.Get(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Gets the named value
            </summary>
            <param name="webConnection"></param>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.NameValuePairsWebHandler.GetAsJson(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Gets the named value as a JSON object
            </summary>
            <param name="webConnection"></param>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.NameValuePairsWebHandler.GetAll(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Gets all of the name-values, returns a JSON object with names and values as strings
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.NameValuePairsWebHandler.Contains(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Returns true if the named value is present, false if it isn't
            </summary>
            <param name="webConnection"></param>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.NameValuePairsWebHandler.Set(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Sets the given value
            </summary>
            <param name="webConnection"></param>
            <param name="Name"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.NameValuePairsWebHandler.Delete(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Deletes the named value
            </summary>
            <param name="webConnection"></param>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.NameValuePairsWebHandler.SetAllJson(ObjectCloud.Interfaces.WebServer.IWebConnection,JsonFx.Json.JsonReader)">
            <summary>
            Sets all of the values based on the passed JSON object
            </summary>
            <param name="webConnection"></param>
            <param name="pairs"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.NameValuePairsWebHandler.SetAll(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Sets all of the values based on the results of a POST query
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.NameValuePairsWebHandler.EnforceSetSecurity(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Throws an exception if the current metadata item can not be set
            </summary>
            <param name="Name"></param>
            <param name="webConnection"></param>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Template.JSONTemplateResolver">
            <summary>
            Handles JSON templates
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Comet.MultiplexingCometWebHandler">
            <summary>
            Web handler that multiplexes layer 1 (transport) to layer 2 (multiplexed) comet sessions
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.MultiplexingCometWebHandler.ConstructCometTransport(ObjectCloud.Interfaces.Security.ISession,System.Collections.Generic.IDictionary{System.String,System.String},System.Int64)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="getArguments"></param>
            <param name="transportId"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Comet.MultiplexingCometWebHandler.MultiplexedCometTransport">
            <summary>
            Provides unreliable multiplexed comet transport
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.Comet.MultiplexingCometWebHandler.MultiplexedCometTransport.FileSystemResolver">
            <summary>
            The file system resolver
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.Comet.MultiplexingCometWebHandler.MultiplexedCometTransport.Session">
            <summary>
            The session
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.Comet.MultiplexingCometWebHandler.MultiplexedCometTransport.Listener">
            <summary>
            The listener used for every channel
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.Comet.MultiplexingCometWebHandler.MultiplexedCometTransport.GetDataMutex">
            <summary>
            Provides syncronization
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.Comet.MultiplexingCometWebHandler.MultiplexedCometTransport.Channels">
            <summary>
            All of the channels, indexed by transport ID
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.Comet.MultiplexingCometWebHandler.MultiplexedCometTransport.RequestedChannels">
            <summary>
            Channels that the client keeps requesting
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.Comet.MultiplexingCometWebHandler.MultiplexedCometTransport.ChannelErrors">
            <summary>
            All errors that occured when opening channels
            </summary>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.Comet.MultiplexingCometWebHandler.MultiplexedCometTransport.StartSend">
            <summary>
            Lets other channels start sending
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Comet.LoopbackCometWebHandler">
            <summary>
            Web handler that performs loopback comet requests
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.LoopbackCometWebHandler.ConstructCometTransport(ObjectCloud.Interfaces.Security.ISession,System.Collections.Generic.IDictionary{System.String,System.String},System.Int64)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="getArguments"></param>
            <param name="transportId"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Comet.LoopbackCometWebHandler.LoopbackCometTransport">
            <summary>
            Comet transport that provides loopback functionality
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.LoopbackCometWebHandler.LoopbackCometTransport.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.LoopbackCometWebHandler.LoopbackCometTransport.OnTimer(System.Object)">
            <summary>
            
            </summary>
            <param name="state"></param>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.Comet.LoopbackCometWebHandler.LoopbackCometTransport.MostRecentData">
            <summary>
            The most recent data sent from the client
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.Comet.LoopbackCometWebHandler.LoopbackCometTransport.ToSend">
            <summary>
            This is the results that are sent every 10 seconds
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.LoopbackCometWebHandler.LoopbackCometTransport.GetDataToSend">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.LoopbackCometWebHandler.LoopbackCometTransport.HandleIncomingData(System.Object)">
            <summary>
            
            </summary>
            <param name="incoming"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.LoopbackCometWebHandler.LoopbackCometTransport.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.Comet.LoopbackCometWebHandler.LoopbackCometTransport.StartSend">
            <summary>
            
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Comet.LoopbackCometWebHandler.MulticastEventWithTimeout">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.LoopbackCometWebHandler.MulticastEventWithTimeout.#ctor(ObjectCloud.Interfaces.WebServer.ICometTransport)">
            <summary>
            
            </summary>
            <param name="ct"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.LoopbackCometWebHandler.MulticastEventWithTimeout.Send(ObjectCloud.Common.EventArgs{System.TimeSpan})">
            <summary>
            
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.DocumentationWebHandler">
            <summary>
            Assists in getting documentation for ObjectCloud's classes
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DocumentationWebHandler.GetObjectTypes(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns all of the object types that the server supports
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DocumentationWebHandler.GetXmlReaderForType(System.Type)">
            <summary>
            Returns an XmlReader that has the documentation for the given type
            </summary>
            <param name="cSharpType"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DocumentationWebHandler.GetMethodsForObjectType(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Returns the methods in the given ObjectType
            </summary>
            <param name="webConnection"></param>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DocumentationWebHandler.GetMethodsForObjectTypeHelper(System.Type,System.Collections.Generic.List{System.Object})">
            <summary>
            Recursively generates documentation for the web-accessible methods on the given type
            </summary>
            <param name="cSharpType"></param>
            <param name="methodsForJSON"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DocumentationWebHandler.GetMethodDetails(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Returns information about the specified method
            </summary>
            <param name="webConnection"></param>
            <param name="objectType"></param>
            <param name="methodName"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.BrowserInfoWebHandler">
            <summary>
            Provides run-time information about the browser accessing the server
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.BrowserInfoWebHandler.IsLegacyWithoutChromePlug(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns true if thie browser is a legacy browser without ChromePlug
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.UserWebHandler">
            <summary>
            Allows manipulation and querying of local users.
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserWebHandler.GetName(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns the user's name
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserWebHandler.GetOpenId(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns the user's openID identity
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserWebHandler.GetPublicData(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Gets all of the user's public metadata 
            </summary>
            <param name="webConnection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserWebHandler.GetAllData(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Gets all of the name-values, returns a JSON object with names and values as strings
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserWebHandler.SetAllData(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Sets all of the values based on the results of a POST query
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserWebHandler.SetAllDataJson(ObjectCloud.Interfaces.WebServer.IWebConnection,JsonFx.Json.JsonReader)">
            <summary>
            Sets all of the values based on the results of a POST query
            </summary>
            <param name="webConnection"></param>
            <param name="pairs"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserWebHandler.GetAvatar(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns the user's avatar image 
            </summary>
            <param name="webConnection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserWebHandler.DoOpenId(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns the page that's used when a user from this server is logging into another server.  (TODO, verify)
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserWebHandler.SetPassword(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Changes the user's password
            </summary>
            <param name="webConnection"></param>
            <param name="OldPassword"></param>
            <param name="NewPassword"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserWebHandler.SendNotification(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <summary>
            Sends a notification
            </summary>
            <param name="webConnection"></param>
            <param name="openId"></param>
            <param name="objectUrl"></param>
            <param name="title"></param>
            <param name="documentType"></param>
            <param name="messageSummary"></param>
            <param name="changeData"></param>
            <param name="forceRefreshSenderToken"></param>
            <param name="forceRefreshEndpoints"></param>
            <param name="maxRetries"></param>
            <param name="transportErrorDelay"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.UserWebHandler.GetNotifications(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.String)">
            <summary>
            Returns notifications for the user in JSON format.
            </summary>
            <param name="webConnection"></param>
            <param name="newestNotificationId"></param>
            <param name="oldestNotificationId"></param>
            <param name="maxNotifications"></param>
            <param name="objectUrl"></param>
            <param name="sender"></param>
            <param name="desiredValues"></param>
            <returns>Notifications for the user in JSON format.  These are scrubbed and "eval-safe"</returns>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.UserWebHandler.IncomingNotificationEvent">
            <summary>
            Sends new notifications as they arrive
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsPad">
            <summary>
            Class for determining if the user's browser is a pad
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsPad.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsMobile">
            <summary>
            Allows a template to determine if the user is using a mobile device, such as a handheld or a pad
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsMobile.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsEqual">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsEqual.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.Else">
            <summary>
            Implements the "else" of an if tag; this always returns true
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.Else.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            Always returns true
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Template.Trimmer">
            <summary>
            Assists in trimming large XML blobs
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsOwner">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsOwner.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateEngine">
            <summary>
            Generates complete files from templates
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.WebHandler">
            <summary>
            WebHandler for files that don't have any web access
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateEngine.Evaluate(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Evaluates the named template
            </summary>
            <param name="webConnection"></param>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateEngine.EvaluateToStream(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Evaluates the named template
            </summary>
            <param name="webConnection"></param>
            <param name="getParameters"></param>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateEngine.EvaluateComponent(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Evaluates the named template
            </summary>
            <param name="webConnection"></param>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateEngine.EnsureNoEmptyTextareas(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Collections.Generic.IDictionary{System.String,System.String},System.Xml.XmlElement)">
            <summary>
            This is to work around a Mozilla quirk where it can't handle empty text areas
            </summary>
            <param name="templateParsingState"></param>
            <param name="getParameters"></param>
            <param name="element"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateEngine.ResolveHeaderFooter(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Collections.Generic.IDictionary{System.String,System.String},ObjectCloud.Interfaces.Disk.IFileContainer,ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState)">
            <summary>
            Returns the file with all header/footers resolved as XML for further processing
            </summary>
            <param name="getParameters"></param>
            <param name="templateFileContainer"></param>
            <param name="webConnection"></param>
            <param name="templateParsingState"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateEngine.GenerateCompositeJavascript(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Generates composite Javascript from a list of scripts
            </summary>
            <param name="webConnection"></param>
            <param name="scriptUrls"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateEngine.GetCompositeScript(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String[])">
            <summary>
            Returns a composite script that contains all of the scripts passed in for low-latency loading
            </summary>
            <param name="webConnection"></param>
            <param name="scriptUrls"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsLoggedIn">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsLoggedIn.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsA">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsA.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.SessionManagerWebHandler">
            <summary>
            Methods to manage the session
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.SessionManagerWebHandler.SetKeepAlive(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Boolean)">
            <summary>
            Updates if the browser should remember the session after being closed
            </summary>
            <param name="webConnection"></param>
            <param name="KeepAlive"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.SessionManagerWebHandler.SetMaxAge(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Double)">
            <summary>
            Updates the maximum age that a session can be without being pinged
            </summary>
            <param name="webConnection"></param>
            <param name="MaxAge">The maxiumum age, in days</param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.JavascriptInterpreterWebHandler">
            <summary>
            Web handler for interpreting server-side Javascript
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.JavascriptInterpreterWebHandler.Run(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Runs the specified Javascript
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.GroupWebHandler">
            <summary>
            Allows manipulation and querying of local users.
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.GroupWebHandler.getMembers(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns all of the members of a group
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.GroupWebHandler.getGroup(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns the group and its alias
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.GroupWebHandler.joinGroup(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Allows a user to join the group
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.GroupWebHandler.leaveGroup(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Allows a user to leave a group
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.GroupWebHandler.isMember(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns true if the current user is a member of the group, false otherwise
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.BinaryWebHandler">
            <summary>
            Handles any kind of binary data
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.BinaryWebHandler.ReadAll(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Reads all of the data in the file
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.BinaryWebHandler.ReadAllBase64(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Reads all of the data in the file and returns a Base64 encoded string
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.BinaryWebHandler.WriteAll(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Byte[])">
            <summary>
            Writes all of the data to the file
            </summary>
            <param name="webConnection"></param>
            <param name="contents">Any kind of data</param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.BinaryWebHandler.WriteAllBase64(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Writes all of the data to the file
            </summary>
            <param name="webConnection"></param>
            <param name="base64">Any kind of data, represented as a base64-encoded string</param>
            <returns></returns>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.BinaryWebHandler.ChangingEvent">
            <summary>
            Sends the updated contents whenever the file changes.  The contents are base64 encoded
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Template.DependancyResolver">
            <summary>
            Removes debug information from documents
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsAdministrator">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsAdministrator.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.HTTPWebProxy">
            <summary>
            WebHandler that provides a HTTP proxy
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.HTTPWebProxy.GET(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Proxies GET requests
            </summary>
            <param name="webConnection"></param>
            <param name="targetUrl"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.HTTPWebProxy.POST_urlencoded(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Proxies POST requests that use the urlencoded convention
            </summary>
            <param name="webConnection"></param>
            <param name="targetUrl"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.HTTPWebProxy.POST(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Proxies all kinds of POST requests
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.HasAction">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.HasAction.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Template.SecurityTagParser">
            <summary>
            Allows insertion of XML in a secure way
            </summary>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.Template.SecurityTagParser.SafeTags">
            <summary>
            The safe tags to use
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.CanWrite">
            <summary>
            
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.CanPermission">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.CanPermission.#ctor(ObjectCloud.Interfaces.Security.FilePermissionEnum)">
            <summary>
            
            </summary>
            <param name="minimumPermission"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.CanPermission.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.CanWrite.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Comet.EchoCometWebHandler">
            <summary>
            Web handler that performs loopback comet requests
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.EchoCometWebHandler.ConstructCometTransport(ObjectCloud.Interfaces.Security.ISession,System.Collections.Generic.IDictionary{System.String,System.String},System.Int64)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <param name="getArguments"></param>
            <param name="transportId"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Comet.EchoCometWebHandler.EchoCometTransport">
            <summary>
            Comet transport that provides loopback functionality
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.EchoCometWebHandler.EchoCometTransport.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.Comet.EchoCometWebHandler.EchoCometTransport.ToSend">
            <summary>
            This is the results that are sent every 10 seconds
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.EchoCometWebHandler.EchoCometTransport.GetDataToSend">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.EchoCometWebHandler.EchoCometTransport.HandleIncomingData(System.Object)">
            <summary>
            
            </summary>
            <param name="incoming"></param>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Comet.EchoCometWebHandler.MulticastEventWithTimeout">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.EchoCometWebHandler.MulticastEventWithTimeout.#ctor(ObjectCloud.Interfaces.WebServer.ICometTransport)">
            <summary>
            
            </summary>
            <param name="ct"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Comet.EchoCometWebHandler.MulticastEventWithTimeout.Send(ObjectCloud.Common.EventArgs{System.TimeSpan})">
            <summary>
            
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TextWebHandler">
            <summary>
            Wrapper for text files
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TextWebHandler.ReadAll(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Reads all of the text in the file
            </summary>
            <param name="webConnection"></param>
            <param name="EncodeFor"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TextWebHandler.ResolveComponents(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Resolves all of the WebComponents in the file
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TextWebHandler.ResolveComponentsGET(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            A Javascript-acceddible way to resolves all of the WebComponents in the file
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TextWebHandler.WriteAll(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Writes all of the text
            </summary>
            <param name="webConnection"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TextWebHandler.Append(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Appends the text
            </summary>
            <param name="webConnection"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TextWebHandler.WriteAll_HTML(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Writes all of the text, intended for use from an HTML form
            </summary>
            <param name="webConnection"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.TextWebHandler.ChangingEvent">
            <summary>
            Sends the updated contents whenever the file changes
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.ScriptsSet">
            <summary>
            set of loaded scripts
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.GenerateWarningNode(System.String)">
            <summary>
            Assists in generating a warning node
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.SetErrorClass(System.Xml.XmlNode)">
            <summary>
            Adds the class="oc_template_warning" to the node
            </summary>
            <param name="htmlNode"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.ReplaceNodes(System.Xml.XmlNode,System.Xml.XmlNodeList)">
            <summary>
            Replaces componentNode with newNodes.  Performs all needed imports
            </summary>
            <param name="newNodes"></param>
            <param name="componentNode"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.ReplaceNodes(System.Xml.XmlNode,System.Xml.XmlNode[])">
            <summary>
            Replaces componentNode with newNodes.  Performs all needed imports
            </summary>
            <param name="newNodes"></param>
            <param name="componentNode"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.ReplaceNodes(System.Xml.XmlNode,System.Collections.Generic.IEnumerable{System.Xml.XmlNode})">
            <summary>
            Replaces componentNode with newNodes.  Performs all needed imports
            </summary>
            <param name="newNodes"></param>
            <param name="componentNode"></param>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.DeferedNodes">
            <summary>
            All of the nodes where GET arguments will not be processed, indexed by localname then by namespace
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.RegisterDeferedNode(System.String,System.String)">
            <summary>
            Indicates that ObjectCloud will not replace GET variables or handle sub-nodes in a specific kind of node, but will instead defer processing until the node is handled later
            </summary>
            <param name="localName"></param>
            <param name="namespaceURI"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.LoadXmlDocument(ObjectCloud.Interfaces.Disk.IFileContainer,ObjectCloud.Interfaces.Templating.XmlParseMode)">
            <summary>
            Loads an XmlDocument from the filecontainer, replacing GET parameters and verifying permissions
            </summary>
            <param name="fileContainer"></param>
            <param name="xmlParseMode">The kind of text that's being parsed</param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.LoadXmlDocument(System.String,ObjectCloud.Interfaces.Templating.XmlParseMode,System.String)">
            <summary>
            Loads an XmlDocument from the filecontainer, replacing GET parameters and verifying permissions
            </summary>
            <param name="xml"></param>
            <param name="xmlParseMode">The kind of text that's being parsed</param>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.GetXmlParseMode(System.Xml.XmlElement)">
            <summary>
            Finds the appropriate XmlParseMode attribute
            </summary>
            <param name="element">This is scanned to find the XmlParseMode</param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.LoadXmlDocumentAndReplaceGetParameters(System.Collections.Generic.IDictionary{System.String,System.String},ObjectCloud.Interfaces.Disk.IFileContainer,ObjectCloud.Interfaces.Templating.XmlParseMode)">
            <summary>
            Loads an XmlDocument from the filecontainer, replacing GET parameters and verifying permissions
            </summary>
            <param name="getParameters"></param>
            <param name="fileContainer"></param>
            <param name="xmlParseMode">The kind of text that's being parsed</param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.ReplaceGetParameters(System.Collections.Generic.IDictionary{System.String,System.String},System.Xml.XmlNode)">
            <summary>
            Replaces all of the GET parameters in an XmlNode
            </summary>
            <param name="getParameters"></param>
            <param name="xmlNode"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.AugmentGetParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds some default runtime metadata to the get parameters
            </summary>
            <param name="getParameters"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.ReplaceGetParameters(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Replaces all of the GET parameters in a string
            </summary>
            <param name="getParameters"></param>
            <param name="xmlAsString"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.ReplaceGetParametersInt(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Replaces all of the GET parameters in a string
            </summary>
            <param name="getParameters"></param>
            <param name="xmlAsString"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.LoadComponentForJSON(System.Xml.XmlElement,System.String)">
            <summary>
            Loads a component for use with JSON.  All inner nodes of element will be replaced with nodes from src
            </summary>
            <param name="element"></param>
            <param name="src"></param>
            <returns>True if the component nodes were loaded successfully; false if there was an error.  Exceptions are not thrown because processing can continue on other parts of the document</returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.DoTemplate(System.Xml.XmlNode,System.Object)">
            <summary>
            Runs a template on the child nodes of an element, and then replaces the element with its children
            </summary>
            <param name="element"></param>
            <param name="templateInput"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.Flatten(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Object)">
            <summary>
            Flattens a JSON object for use with a template
            </summary>
            <param name="getParameters"></param>
            <param name="prefix"></param>
            <param name="templateInput"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.Template.TemplateParsingState.IterateNonDeferredElements(System.Xml.XmlNode)">
            <summary>
            Iterates through all elements except children of deferred elements
            </summary>
            <param name="xmlNode"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Template.DebugInformationRemover">
            <summary>
            Removes debug information from documents
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsLocal">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsLocal.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.CanAdminister">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.CanAdminister.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.ImageWebHandler">
            <summary>
            Adds additional web-based image processing capabilities
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.ImageWebHandler.GetScaled(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns a scaled version of the image to fit the constraints passed in
            </summary>
            <param name="webConnection"></param>
            <param name="width">The width.  If height is not specified, then a proportional height will be used</param>
            <param name="height">The width.  If width is not specified, then a proportiional width will be used</param>
            <param name="maxHeight">The maxiumum height to return</param>
            <param name="maxWidth">The maximum width to return</param>
            <param name="minHeight">The mimumum height to return</param>
            <param name="minWidth">The minumum width to return</param>
            <returns></returns>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.ImageWebHandler.Image">
            <summary>
            Im-memory object that encapsulates a saved image.  This allows for programmatic access to metadata
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.DatabaseWebHandler">
            <summary>
            Web-callable wrapper for embedded databasess
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Template.AggressiveCachingEnabler">
            <summary>
            Enables aggressive caching on a document prior to returning it
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.Template.AggressiveCachingEnabler.State.PrecalculatedWithMD5">
            <summary>
            Cache of URLs with the BrowserCache argument added when it's based off of an MD5.  This prevents re-calculating MD5s continuously for common URLs
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.HasValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.HasValue.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="TemplateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.CanRead">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.CanRead.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsOpenID">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsOpenID.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsHandheld">
            <summary>
            Condition for determining if a browser is a handheld
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.IsHandheld.IsConditionMet(ObjectCloud.Interfaces.Templating.ITemplateParsingState,System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler">
            <summary>
            Wraps all functionality of a directory
            </summary>
        </member>
        <member name="F:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.CreateFileLock">
            <summary>
            Synchronizes creating a file
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.CreateFile(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Creates a file
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
            <param name="FileName">The file name.  Either the file name or extension need to be specified</param>
            <param name="extension">The file extension.  Either the extension or file name need to be specified</param>
            <param name="FileType">The file type</param>
            <param name="ErrorIfExists">True to return an error if the file already exists</param>
            <param name="fileNameSuggestion">A suggestion for creating a file name.  ObjectCloud will attempt to generate a real file name from this suggestion</param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.CreateFileHelper(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Helps in creating a file
            </summary>
            <param name="webConnection"></param>
            <param name="FileName">Filename, this or fileNameSuggestion must be specified</param>
            <param name="extension"></param>
            <param name="fileNameSuggestion">Suggestion for a filename.  This can be any string, when specified, extension must also be specified.</param>
            <param name="FileType"></param>
            <param name="ErrorIfExists">True to throw an error if there already is an existing file with the same filename.  False if ObjectCloud should silently return a wrapper if the file already exists.  If fileNameSuggestion is used instead of FileName, then if there is an existing filename with the first generated filename, then it will be returned instead of created.</param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.DetermineFileType(System.String)">
            <summary>
            Assists in determining the file type given the extension
            </summary>
            <param name="extension"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.GenerateFilename(System.String,System.String,System.Boolean)">
            <summary>
            Assists in generating a filename
            </summary>
            <param name="extension"></param>
            <param name="fileNameSuggestion"></param>
            <param name="unique"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.DeleteFile(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Deletes a file
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
            <param name="FileName"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.Open(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Returns a JavaScript object that can manipulate the given file
            </summary>
            <param name="webConnection"></param>
            <param name="FileName"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.ListFiles(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Lists all of the files in the directory as a JSON array
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.ListNewestFiles(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Nullable{System.Int64})">
            <summary>
            Lists the newest files that the user has access to in descending order of creation
            </summary>
            <param name="webConnection"></param>
            <param name="maxToReturn"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.ReturnFilesAsJSON(ObjectCloud.Interfaces.WebServer.IWebConnection,System.Collections.Generic.IEnumerable{ObjectCloud.Interfaces.Disk.IFileContainer})">
            <summary>
            Helper to return files as JSON
            </summary>
            <param name="files"></param>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.IsFilePresent(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Returns "true" if the file is present, "false" otherwise
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
            <param name="FileName"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.SetFilePermission(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Sets the user's permission for the given file.  Either the user or group ID or name are set
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
            <param name="FileName">The filename</param>
            <param name="FilePermission">The permission, set to null to disable permissions to the file</param>
            <param name="Inherit">Set to true to allow permission inheritance.  For example, if this permission applies to a directory, it will be the default for files in the directory</param>
            <param name="UserOrGroup"></param>
            <param name="UserOrGroupId"></param>
            <param name="SendNotifications"></param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.GetFilePermissions(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Returns all assigned permissions to the object
            </summary>
            <param name="webConnection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
            <param name="FileName">The filename</param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.GetUserFilePermission(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Returns the current user's permission to the given filename
            </summary>
            <param name="webConnection">
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebConnection"/>
            </param>
            <returns>
            A <see cref="T:ObjectCloud.Interfaces.WebServer.IWebResults"/>
            </returns>
            <param name="FileName">The filename</param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.RenameFile(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Renames a file
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
            <param name="NewFileName">The new file name</param>
            <param name="OldFileName">The old file name</param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.CopyFile(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String,System.String)">
            <summary>
            Copies a file
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
            <param name="DestinationFilename">The destination file</param>
            <param name="SourceFilename">The source file</param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.Upload(ObjectCloud.Interfaces.WebServer.IWebConnection,ObjectCloud.Common.MimeReader.Part)">
            <summary>
            Handles when a user uploads a file
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
            <param name="File">The file as part of a MIME paramater</param>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.GetFileFactoryTypeFromUpload(ObjectCloud.Common.MimeReader.Part,System.String@)">
            <summary>
            Figures out the fileFactoryType from an upload
            </summary>
            <param name="File"></param>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.SetIndexFile(ObjectCloud.Interfaces.WebServer.IWebConnection,System.String)">
            <summary>
            Sets the index file
            </summary>
            <param name="webConnection"></param>
            <param name="IndexFile"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.GetIndexFile(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns the name of the index file, or "No index file" if there is none
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.ShellToIndexFile(ObjectCloud.Interfaces.WebServer.IWebConnection)">
            <summary>
            Returns the results of shelling to the index file
            </summary>
            <param name="webConnection"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.UpdateConnectionFiles(ObjectCloud.Interfaces.WebServer.IQueuingReliableCometTransport,System.Collections.Generic.IList{ObjectCloud.Interfaces.Disk.IFileContainer})">
            <summary>
            Helper to update the files on a connection
            </summary>
            <param name="channel"></param>
            <param name="files"></param>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.ImplicitAction">
            <summary>
            If there is an index file set, this sets the implicit action to be something else
            </summary>
        </member>
        <member name="P:ObjectCloud.Disk.WebHandlers.DirectoryWebHandler.ChangingEvent">
            <summary>
            Sends a packet whenever the contents of the directory changes.  The packet contains the contents of the directory tailored to the user
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.Template.ComponentAndConditionalsResolver">
            <summary>
            Removes debug information from documents
            </summary>
        </member>
        <member name="T:ObjectCloud.Disk.WebHandlers.TemplateConditions.Supports">
            <summary>
            
            </summary>
        </member>
        <member name="M:ObjectCloud.Disk.WebHandlers.TemplateConditions.Supports.DetermineCondition(ObjectCloud.Interfaces.Templating.ITemplateParsingState,ObjectCloud.Interfaces.Disk.IFileContainer,System.String)">
            <summary>
            
            </summary>
            <param name="templateParsingState"></param>
            <param name="fileContainer"></param>
            <param name="namedPermission"></param>
            <returns></returns>
        </member>
    </members>
</doc>
